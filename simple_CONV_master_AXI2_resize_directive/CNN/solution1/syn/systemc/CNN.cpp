// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "CNN.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic CNN::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic CNN::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<41> CNN::ap_ST_fsm_state1 = "1";
const sc_lv<41> CNN::ap_ST_fsm_state2 = "10";
const sc_lv<41> CNN::ap_ST_fsm_state3 = "100";
const sc_lv<41> CNN::ap_ST_fsm_state4 = "1000";
const sc_lv<41> CNN::ap_ST_fsm_state5 = "10000";
const sc_lv<41> CNN::ap_ST_fsm_state6 = "100000";
const sc_lv<41> CNN::ap_ST_fsm_state7 = "1000000";
const sc_lv<41> CNN::ap_ST_fsm_state8 = "10000000";
const sc_lv<41> CNN::ap_ST_fsm_state9 = "100000000";
const sc_lv<41> CNN::ap_ST_fsm_state10 = "1000000000";
const sc_lv<41> CNN::ap_ST_fsm_pp0_stage0 = "10000000000";
const sc_lv<41> CNN::ap_ST_fsm_state14 = "100000000000";
const sc_lv<41> CNN::ap_ST_fsm_state15 = "1000000000000";
const sc_lv<41> CNN::ap_ST_fsm_state16 = "10000000000000";
const sc_lv<41> CNN::ap_ST_fsm_pp1_stage0 = "100000000000000";
const sc_lv<41> CNN::ap_ST_fsm_state20 = "1000000000000000";
const sc_lv<41> CNN::ap_ST_fsm_state21 = "10000000000000000";
const sc_lv<41> CNN::ap_ST_fsm_state22 = "100000000000000000";
const sc_lv<41> CNN::ap_ST_fsm_state23 = "1000000000000000000";
const sc_lv<41> CNN::ap_ST_fsm_state24 = "10000000000000000000";
const sc_lv<41> CNN::ap_ST_fsm_state25 = "100000000000000000000";
const sc_lv<41> CNN::ap_ST_fsm_state26 = "1000000000000000000000";
const sc_lv<41> CNN::ap_ST_fsm_state27 = "10000000000000000000000";
const sc_lv<41> CNN::ap_ST_fsm_state28 = "100000000000000000000000";
const sc_lv<41> CNN::ap_ST_fsm_state29 = "1000000000000000000000000";
const sc_lv<41> CNN::ap_ST_fsm_state30 = "10000000000000000000000000";
const sc_lv<41> CNN::ap_ST_fsm_pp2_stage0 = "100000000000000000000000000";
const sc_lv<41> CNN::ap_ST_fsm_state34 = "1000000000000000000000000000";
const sc_lv<41> CNN::ap_ST_fsm_state35 = "10000000000000000000000000000";
const sc_lv<41> CNN::ap_ST_fsm_state36 = "100000000000000000000000000000";
const sc_lv<41> CNN::ap_ST_fsm_state37 = "1000000000000000000000000000000";
const sc_lv<41> CNN::ap_ST_fsm_state38 = "10000000000000000000000000000000";
const sc_lv<41> CNN::ap_ST_fsm_state39 = "100000000000000000000000000000000";
const sc_lv<41> CNN::ap_ST_fsm_state40 = "1000000000000000000000000000000000";
const sc_lv<41> CNN::ap_ST_fsm_state41 = "10000000000000000000000000000000000";
const sc_lv<41> CNN::ap_ST_fsm_pp3_stage0 = "100000000000000000000000000000000000";
const sc_lv<41> CNN::ap_ST_fsm_state45 = "1000000000000000000000000000000000000";
const sc_lv<41> CNN::ap_ST_fsm_state46 = "10000000000000000000000000000000000000";
const sc_lv<41> CNN::ap_ST_fsm_state47 = "100000000000000000000000000000000000000";
const sc_lv<41> CNN::ap_ST_fsm_state48 = "1000000000000000000000000000000000000000";
const sc_lv<41> CNN::ap_ST_fsm_state49 = "10000000000000000000000000000000000000000";
const sc_lv<32> CNN::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool CNN::ap_const_boolean_1 = true;
const sc_lv<32> CNN::ap_const_lv32_2 = "10";
const sc_lv<1> CNN::ap_const_lv1_0 = "0";
const sc_lv<32> CNN::ap_const_lv32_1A = "11010";
const bool CNN::ap_const_boolean_0 = false;
const sc_lv<32> CNN::ap_const_lv32_D = "1101";
const sc_lv<32> CNN::ap_const_lv32_13 = "10011";
const sc_lv<32> CNN::ap_const_lv32_1C = "11100";
const sc_lv<32> CNN::ap_const_lv32_23 = "100011";
const sc_lv<32> CNN::ap_const_lv32_A = "1010";
const sc_lv<32> CNN::ap_const_lv32_3 = "11";
const int CNN::C_M_AXI_IMG_PORT_TARGET_ADDR = "0000000000000000000000000000000000000000000000000000000000000000";
const int CNN::C_M_AXI_IMG_PORT_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int CNN::C_M_AXI_IMG_PORT_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int CNN::C_M_AXI_IMG_PORT_CACHE_VALUE = "11";
const int CNN::C_M_AXI_DATA_WIDTH = "100000";
const sc_lv<32> CNN::ap_const_lv32_C = "1100";
const sc_lv<32> CNN::ap_const_lv32_25 = "100101";
const sc_lv<32> CNN::ap_const_lv32_1 = "1";
const sc_lv<1> CNN::ap_const_lv1_1 = "1";
const sc_lv<32> CNN::ap_const_lv32_B = "1011";
const sc_lv<32> CNN::ap_const_lv32_E = "1110";
const sc_lv<32> CNN::ap_const_lv32_F = "1111";
const sc_lv<32> CNN::ap_const_lv32_1B = "11011";
const sc_lv<32> CNN::ap_const_lv32_22 = "100010";
const sc_lv<32> CNN::ap_const_lv32_24 = "100100";
const sc_lv<32> CNN::ap_const_lv32_27 = "100111";
const sc_lv<32> CNN::ap_const_lv32_9 = "1001";
const sc_lv<32> CNN::ap_const_lv32_19 = "11001";
const sc_lv<5> CNN::ap_const_lv5_0 = "00000";
const sc_lv<2> CNN::ap_const_lv2_0 = "00";
const sc_lv<4> CNN::ap_const_lv4_0 = "0000";
const sc_lv<14> CNN::ap_const_lv14_0 = "00000000000000";
const sc_lv<8> CNN::ap_const_lv8_0 = "00000000";
const sc_lv<32> CNN::ap_const_lv32_26 = "100110";
const sc_lv<32> CNN::ap_const_lv32_28 = "101000";
const sc_lv<32> CNN::ap_const_lv32_2710 = "10011100010000";
const sc_lv<3> CNN::ap_const_lv3_0 = "000";
const sc_lv<32> CNN::ap_const_lv32_2584 = "10010110000100";
const sc_lv<17> CNN::ap_const_lv17_2710 = "10011100010000";
const sc_lv<5> CNN::ap_const_lv5_18 = "11000";
const sc_lv<5> CNN::ap_const_lv5_1 = "1";
const sc_lv<4> CNN::ap_const_lv4_8 = "1000";
const sc_lv<2> CNN::ap_const_lv2_1 = "1";
const sc_lv<15> CNN::ap_const_lv15_2710 = "10011100010000";
const sc_lv<14> CNN::ap_const_lv14_2710 = "10011100010000";
const sc_lv<14> CNN::ap_const_lv14_1 = "1";
const sc_lv<14> CNN::ap_const_lv14_2584 = "10010110000100";
const sc_lv<4> CNN::ap_const_lv4_1 = "1";
const sc_lv<8> CNN::ap_const_lv8_1 = "1";
const sc_lv<17> CNN::ap_const_lv17_2584 = "10010110000100";
const sc_lv<17> CNN::ap_const_lv17_7530 = "111010100110000";

CNN::CNN(sc_module_name name) : sc_module(name), mVcdFile(0) {
    CNN_img_port_m_axi_U = new CNN_img_port_m_axi<0,8,32,5,16,16,16,16,C_M_AXI_IMG_PORT_ID_WIDTH,C_M_AXI_IMG_PORT_ADDR_WIDTH,C_M_AXI_IMG_PORT_DATA_WIDTH,C_M_AXI_IMG_PORT_AWUSER_WIDTH,C_M_AXI_IMG_PORT_ARUSER_WIDTH,C_M_AXI_IMG_PORT_WUSER_WIDTH,C_M_AXI_IMG_PORT_RUSER_WIDTH,C_M_AXI_IMG_PORT_BUSER_WIDTH,C_M_AXI_IMG_PORT_TARGET_ADDR,C_M_AXI_IMG_PORT_USER_VALUE,C_M_AXI_IMG_PORT_PROT_VALUE,C_M_AXI_IMG_PORT_CACHE_VALUE>("CNN_img_port_m_axi_U");
    CNN_img_port_m_axi_U->AWVALID(m_axi_img_port_AWVALID);
    CNN_img_port_m_axi_U->AWREADY(m_axi_img_port_AWREADY);
    CNN_img_port_m_axi_U->AWADDR(m_axi_img_port_AWADDR);
    CNN_img_port_m_axi_U->AWID(m_axi_img_port_AWID);
    CNN_img_port_m_axi_U->AWLEN(m_axi_img_port_AWLEN);
    CNN_img_port_m_axi_U->AWSIZE(m_axi_img_port_AWSIZE);
    CNN_img_port_m_axi_U->AWBURST(m_axi_img_port_AWBURST);
    CNN_img_port_m_axi_U->AWLOCK(m_axi_img_port_AWLOCK);
    CNN_img_port_m_axi_U->AWCACHE(m_axi_img_port_AWCACHE);
    CNN_img_port_m_axi_U->AWPROT(m_axi_img_port_AWPROT);
    CNN_img_port_m_axi_U->AWQOS(m_axi_img_port_AWQOS);
    CNN_img_port_m_axi_U->AWREGION(m_axi_img_port_AWREGION);
    CNN_img_port_m_axi_U->AWUSER(m_axi_img_port_AWUSER);
    CNN_img_port_m_axi_U->WVALID(m_axi_img_port_WVALID);
    CNN_img_port_m_axi_U->WREADY(m_axi_img_port_WREADY);
    CNN_img_port_m_axi_U->WDATA(m_axi_img_port_WDATA);
    CNN_img_port_m_axi_U->WSTRB(m_axi_img_port_WSTRB);
    CNN_img_port_m_axi_U->WLAST(m_axi_img_port_WLAST);
    CNN_img_port_m_axi_U->WID(m_axi_img_port_WID);
    CNN_img_port_m_axi_U->WUSER(m_axi_img_port_WUSER);
    CNN_img_port_m_axi_U->ARVALID(m_axi_img_port_ARVALID);
    CNN_img_port_m_axi_U->ARREADY(m_axi_img_port_ARREADY);
    CNN_img_port_m_axi_U->ARADDR(m_axi_img_port_ARADDR);
    CNN_img_port_m_axi_U->ARID(m_axi_img_port_ARID);
    CNN_img_port_m_axi_U->ARLEN(m_axi_img_port_ARLEN);
    CNN_img_port_m_axi_U->ARSIZE(m_axi_img_port_ARSIZE);
    CNN_img_port_m_axi_U->ARBURST(m_axi_img_port_ARBURST);
    CNN_img_port_m_axi_U->ARLOCK(m_axi_img_port_ARLOCK);
    CNN_img_port_m_axi_U->ARCACHE(m_axi_img_port_ARCACHE);
    CNN_img_port_m_axi_U->ARPROT(m_axi_img_port_ARPROT);
    CNN_img_port_m_axi_U->ARQOS(m_axi_img_port_ARQOS);
    CNN_img_port_m_axi_U->ARREGION(m_axi_img_port_ARREGION);
    CNN_img_port_m_axi_U->ARUSER(m_axi_img_port_ARUSER);
    CNN_img_port_m_axi_U->RVALID(m_axi_img_port_RVALID);
    CNN_img_port_m_axi_U->RREADY(m_axi_img_port_RREADY);
    CNN_img_port_m_axi_U->RDATA(m_axi_img_port_RDATA);
    CNN_img_port_m_axi_U->RLAST(m_axi_img_port_RLAST);
    CNN_img_port_m_axi_U->RID(m_axi_img_port_RID);
    CNN_img_port_m_axi_U->RUSER(m_axi_img_port_RUSER);
    CNN_img_port_m_axi_U->RRESP(m_axi_img_port_RRESP);
    CNN_img_port_m_axi_U->BVALID(m_axi_img_port_BVALID);
    CNN_img_port_m_axi_U->BREADY(m_axi_img_port_BREADY);
    CNN_img_port_m_axi_U->BRESP(m_axi_img_port_BRESP);
    CNN_img_port_m_axi_U->BID(m_axi_img_port_BID);
    CNN_img_port_m_axi_U->BUSER(m_axi_img_port_BUSER);
    CNN_img_port_m_axi_U->ACLK(ap_clk);
    CNN_img_port_m_axi_U->ARESET(ap_rst_n_inv);
    CNN_img_port_m_axi_U->ACLK_EN(ap_var_for_const0);
    CNN_img_port_m_axi_U->I_ARVALID(img_port_ARVALID);
    CNN_img_port_m_axi_U->I_ARREADY(img_port_ARREADY);
    CNN_img_port_m_axi_U->I_ARADDR(img_port_ARADDR);
    CNN_img_port_m_axi_U->I_ARID(ap_var_for_const1);
    CNN_img_port_m_axi_U->I_ARLEN(img_port_ARLEN);
    CNN_img_port_m_axi_U->I_ARSIZE(ap_var_for_const2);
    CNN_img_port_m_axi_U->I_ARLOCK(ap_var_for_const3);
    CNN_img_port_m_axi_U->I_ARCACHE(ap_var_for_const4);
    CNN_img_port_m_axi_U->I_ARQOS(ap_var_for_const4);
    CNN_img_port_m_axi_U->I_ARPROT(ap_var_for_const2);
    CNN_img_port_m_axi_U->I_ARUSER(ap_var_for_const1);
    CNN_img_port_m_axi_U->I_ARBURST(ap_var_for_const3);
    CNN_img_port_m_axi_U->I_ARREGION(ap_var_for_const4);
    CNN_img_port_m_axi_U->I_RVALID(img_port_RVALID);
    CNN_img_port_m_axi_U->I_RREADY(img_port_RREADY);
    CNN_img_port_m_axi_U->I_RDATA(img_port_RDATA);
    CNN_img_port_m_axi_U->I_RID(img_port_RID);
    CNN_img_port_m_axi_U->I_RUSER(img_port_RUSER);
    CNN_img_port_m_axi_U->I_RRESP(img_port_RRESP);
    CNN_img_port_m_axi_U->I_RLAST(img_port_RLAST);
    CNN_img_port_m_axi_U->I_AWVALID(img_port_AWVALID);
    CNN_img_port_m_axi_U->I_AWREADY(img_port_AWREADY);
    CNN_img_port_m_axi_U->I_AWADDR(img_port_addr_2_reg_866);
    CNN_img_port_m_axi_U->I_AWID(ap_var_for_const1);
    CNN_img_port_m_axi_U->I_AWLEN(ap_var_for_const5);
    CNN_img_port_m_axi_U->I_AWSIZE(ap_var_for_const2);
    CNN_img_port_m_axi_U->I_AWLOCK(ap_var_for_const3);
    CNN_img_port_m_axi_U->I_AWCACHE(ap_var_for_const4);
    CNN_img_port_m_axi_U->I_AWQOS(ap_var_for_const4);
    CNN_img_port_m_axi_U->I_AWPROT(ap_var_for_const2);
    CNN_img_port_m_axi_U->I_AWUSER(ap_var_for_const1);
    CNN_img_port_m_axi_U->I_AWBURST(ap_var_for_const3);
    CNN_img_port_m_axi_U->I_AWREGION(ap_var_for_const4);
    CNN_img_port_m_axi_U->I_WVALID(img_port_WVALID);
    CNN_img_port_m_axi_U->I_WREADY(img_port_WREADY);
    CNN_img_port_m_axi_U->I_WDATA(buff_output_img_load_reg_886);
    CNN_img_port_m_axi_U->I_WID(ap_var_for_const1);
    CNN_img_port_m_axi_U->I_WUSER(ap_var_for_const1);
    CNN_img_port_m_axi_U->I_WLAST(ap_var_for_const6);
    CNN_img_port_m_axi_U->I_WSTRB(ap_var_for_const7);
    CNN_img_port_m_axi_U->I_BVALID(img_port_BVALID);
    CNN_img_port_m_axi_U->I_BREADY(img_port_BREADY);
    CNN_img_port_m_axi_U->I_BRESP(img_port_BRESP);
    CNN_img_port_m_axi_U->I_BID(img_port_BID);
    CNN_img_port_m_axi_U->I_BUSER(img_port_BUSER);
    buff_input_img_U = new CNN_buff_input_img("buff_input_img_U");
    buff_input_img_U->clk(ap_clk);
    buff_input_img_U->reset(ap_rst_n_inv);
    buff_input_img_U->address0(grp_CONV_fu_363_input_img_address0);
    buff_input_img_U->ce0(buff_input_img_ce0);
    buff_input_img_U->q0(buff_input_img_q0);
    buff_input_img_U->address1(buff_input_img_address1);
    buff_input_img_U->ce1(buff_input_img_ce1);
    buff_input_img_U->we1(buff_input_img_we1);
    buff_input_img_U->d1(buff_input_img_d1);
    buff_output_img_U = new CNN_buff_output_img("buff_output_img_U");
    buff_output_img_U->clk(ap_clk);
    buff_output_img_U->reset(ap_rst_n_inv);
    buff_output_img_U->address0(buff_output_img_address0);
    buff_output_img_U->ce0(buff_output_img_ce0);
    buff_output_img_U->we0(buff_output_img_we0);
    buff_output_img_U->d0(buff_output_img_d0);
    buff_output_img_U->q0(buff_output_img_q0);
    buff_result_img_U = new CNN_buff_output_img("buff_result_img_U");
    buff_result_img_U->clk(ap_clk);
    buff_result_img_U->reset(ap_rst_n_inv);
    buff_result_img_U->address0(buff_result_img_address0);
    buff_result_img_U->ce0(buff_result_img_ce0);
    buff_result_img_U->we0(buff_result_img_we0);
    buff_result_img_U->d0(img_port_addr_3_read_reg_935);
    buff_result_img_U->q0(buff_result_img_q0);
    grp_CONV_fu_363 = new CONV("grp_CONV_fu_363");
    grp_CONV_fu_363->ap_clk(ap_clk);
    grp_CONV_fu_363->ap_rst(ap_rst_n_inv);
    grp_CONV_fu_363->ap_start(grp_CONV_fu_363_ap_start);
    grp_CONV_fu_363->ap_done(grp_CONV_fu_363_ap_done);
    grp_CONV_fu_363->ap_idle(grp_CONV_fu_363_ap_idle);
    grp_CONV_fu_363->ap_ready(grp_CONV_fu_363_ap_ready);
    grp_CONV_fu_363->input_img_address0(grp_CONV_fu_363_input_img_address0);
    grp_CONV_fu_363->input_img_ce0(grp_CONV_fu_363_input_img_ce0);
    grp_CONV_fu_363->input_img_q0(buff_input_img_q0);
    grp_CONV_fu_363->kernel_address0(grp_CONV_fu_363_kernel_address0);
    grp_CONV_fu_363->kernel_ce0(grp_CONV_fu_363_kernel_ce0);
    grp_CONV_fu_363->kernel_q0(kernel_q0);
    grp_CONV_fu_363->kernel_offset(grp_CONV_fu_363_kernel_offset);
    grp_CONV_fu_363->bias(reg_374);
    grp_CONV_fu_363->output_img_address0(grp_CONV_fu_363_output_img_address0);
    grp_CONV_fu_363->output_img_ce0(grp_CONV_fu_363_output_img_ce0);
    grp_CONV_fu_363->output_img_we0(grp_CONV_fu_363_output_img_we0);
    grp_CONV_fu_363->output_img_d0(grp_CONV_fu_363_output_img_d0);
    CNN_mac_muladd_15cud_U13 = new CNN_mac_muladd_15cud<1,1,15,4,16,17>("CNN_mac_muladd_15cud_U13");
    CNN_mac_muladd_15cud_U13->din0(grp_fu_740_p0);
    CNN_mac_muladd_15cud_U13->din1(grp_fu_740_p1);
    CNN_mac_muladd_15cud_U13->din2(grp_fu_740_p2);
    CNN_mac_muladd_15cud_U13->dout(grp_fu_740_p3);
    CNN_mac_muladd_4ndEe_U14 = new CNN_mac_muladd_4ndEe<1,1,4,15,16,17>("CNN_mac_muladd_4ndEe_U14");
    CNN_mac_muladd_4ndEe_U14->din0(grp_fu_749_p0);
    CNN_mac_muladd_4ndEe_U14->din1(grp_fu_749_p1);
    CNN_mac_muladd_4ndEe_U14->din2(grp_fu_749_p2);
    CNN_mac_muladd_4ndEe_U14->dout(grp_fu_749_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp2_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp3_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_842 );
    sensitive << ( img_port_RVALID );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_842 );
    sensitive << ( img_port_RVALID );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_01001);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_state19_io );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_state19_io );

    SC_METHOD(thread_ap_block_pp2_stage0);

    SC_METHOD(thread_ap_block_pp2_stage0_11001);
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( exitcond2_reg_896 );
    sensitive << ( img_port_RVALID );

    SC_METHOD(thread_ap_block_pp2_stage0_subdone);
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( exitcond2_reg_896 );
    sensitive << ( img_port_RVALID );

    SC_METHOD(thread_ap_block_pp3_stage0);

    SC_METHOD(thread_ap_block_pp3_stage0_11001);
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond4_reg_926 );
    sensitive << ( img_port_RVALID );

    SC_METHOD(thread_ap_block_pp3_stage0_subdone);
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond4_reg_926 );
    sensitive << ( img_port_RVALID );

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter1);
    sensitive << ( exitcond1_reg_842 );
    sensitive << ( img_port_RVALID );

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state17_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state18_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state19_io);
    sensitive << ( exitcond3_reg_872_pp1_iter1_reg );
    sensitive << ( ap_sig_ioackin_img_port_WREADY );

    SC_METHOD(thread_ap_block_state19_pp1_stage0_iter2);

    SC_METHOD(thread_ap_block_state31_pp2_stage0_iter0);

    SC_METHOD(thread_ap_block_state32_pp2_stage0_iter1);
    sensitive << ( exitcond2_reg_896 );
    sensitive << ( img_port_RVALID );

    SC_METHOD(thread_ap_block_state33_pp2_stage0_iter2);

    SC_METHOD(thread_ap_block_state3_io);
    sensitive << ( tmp_mid2_fu_460_p3 );
    sensitive << ( ap_sig_ioackin_img_port_ARREADY );

    SC_METHOD(thread_ap_block_state42_pp3_stage0_iter0);

    SC_METHOD(thread_ap_block_state43_pp3_stage0_iter1);
    sensitive << ( exitcond4_reg_926 );
    sensitive << ( img_port_RVALID );

    SC_METHOD(thread_ap_block_state44_pp3_stage0_iter2);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state11);
    sensitive << ( exitcond1_fu_537_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state17);
    sensitive << ( exitcond3_fu_609_p2 );

    SC_METHOD(thread_ap_condition_pp2_exit_iter0_state31);
    sensitive << ( exitcond2_fu_631_p2 );

    SC_METHOD(thread_ap_condition_pp3_exit_iter0_state42);
    sensitive << ( exitcond4_fu_669_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten_fu_423_p2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_enable_pp2);
    sensitive << ( ap_idle_pp2 );

    SC_METHOD(thread_ap_enable_pp3);
    sensitive << ( ap_idle_pp3 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_idle_pp2);
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp2_iter2 );

    SC_METHOD(thread_ap_idle_pp3);
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( ap_enable_reg_pp3_iter2 );

    SC_METHOD(thread_ap_phi_mux_indvar1_phi_fu_332_p4);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( exitcond2_reg_896 );
    sensitive << ( indvar1_reg_328 );
    sensitive << ( indvar_next1_reg_900 );

    SC_METHOD(thread_ap_phi_mux_indvar5_phi_fu_344_p4);
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_block_pp3_stage0 );
    sensitive << ( exitcond4_reg_926 );
    sensitive << ( indvar5_reg_340 );
    sensitive << ( indvar_next3_reg_930 );

    SC_METHOD(thread_ap_phi_mux_indvar_phi_fu_309_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond1_reg_842 );
    sensitive << ( indvar_reg_305 );
    sensitive << ( indvar_next_reg_846 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten_fu_423_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ioackin_img_port_ARREADY);
    sensitive << ( img_port_ARREADY );
    sensitive << ( ap_reg_ioackin_img_port_ARREADY );

    SC_METHOD(thread_ap_sig_ioackin_img_port_AWREADY);
    sensitive << ( img_port_AWREADY );
    sensitive << ( ap_reg_ioackin_img_port_AWREADY );

    SC_METHOD(thread_ap_sig_ioackin_img_port_WREADY);
    sensitive << ( img_port_WREADY );
    sensitive << ( ap_reg_ioackin_img_port_WREADY );

    SC_METHOD(thread_bias_address0);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( tmp_35_fu_562_p1 );
    sensitive << ( tmp_40_fu_716_p1 );

    SC_METHOD(thread_bias_ce0);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_buff_input_img_address1);
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( indvar2_fu_549_p1 );
    sensitive << ( indvar3_fu_643_p1 );

    SC_METHOD(thread_buff_input_img_ce0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_CONV_fu_363_input_img_ce0 );
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_buff_input_img_ce1);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp2_iter2 );

    SC_METHOD(thread_buff_input_img_d1);
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( img_port_addr_read_reg_851 );
    sensitive << ( img_port_addr_1_read_reg_905 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp2_iter2 );

    SC_METHOD(thread_buff_input_img_we1);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( exitcond1_reg_842_pp0_iter1_reg );
    sensitive << ( exitcond2_reg_896_pp2_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp2_iter2 );

    SC_METHOD(thread_buff_output_img_address0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( buff_output_img_addr_1_reg_955 );
    sensitive << ( grp_CONV_fu_363_output_img_address0 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( indvar6_fu_621_p1 );
    sensitive << ( tmp_i_fu_721_p1 );

    SC_METHOD(thread_buff_output_img_ce0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( grp_CONV_fu_363_output_img_ce0 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state49 );

    SC_METHOD(thread_buff_output_img_d0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_CONV_fu_363_output_img_d0 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( tmp_1_i_fu_733_p2 );

    SC_METHOD(thread_buff_output_img_we0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_CONV_fu_363_output_img_we0 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state49 );

    SC_METHOD(thread_buff_result_img_address0);
    sensitive << ( ap_block_pp3_stage0 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( indvar7_fu_681_p1 );
    sensitive << ( tmp_i_fu_721_p1 );

    SC_METHOD(thread_buff_result_img_ce0);
    sensitive << ( ap_block_pp3_stage0_11001 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_enable_reg_pp3_iter2 );

    SC_METHOD(thread_buff_result_img_we0);
    sensitive << ( ap_block_pp3_stage0_11001 );
    sensitive << ( exitcond4_reg_926_pp3_iter1_reg );
    sensitive << ( ap_enable_reg_pp3_iter2 );

    SC_METHOD(thread_exitcond1_fu_537_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_indvar_phi_fu_309_p4 );

    SC_METHOD(thread_exitcond2_fu_631_p2);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_phi_mux_indvar1_phi_fu_332_p4 );

    SC_METHOD(thread_exitcond3_fu_609_p2);
    sensitive << ( indvar4_reg_317 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_exitcond4_fu_669_p2);
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_block_pp3_stage0_11001 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( ap_phi_mux_indvar5_phi_fu_344_p4 );

    SC_METHOD(thread_exitcond_flatten_fu_423_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( indvar_flatten_reg_270 );

    SC_METHOD(thread_exitcond_fu_435_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten_fu_423_p2 );
    sensitive << ( j_reg_293 );

    SC_METHOD(thread_grp_CONV_fu_363_ap_start);
    sensitive << ( grp_CONV_fu_363_ap_start_reg );

    SC_METHOD(thread_grp_CONV_fu_363_kernel_offset);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( sum_reg_861 );
    sensitive << ( sum2_reg_940 );
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_grp_fu_740_p0);
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_grp_fu_740_p1);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( grp_fu_740_p10 );

    SC_METHOD(thread_grp_fu_740_p10);
    sensitive << ( j_mid2_reg_803 );

    SC_METHOD(thread_grp_fu_740_p2);
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_grp_fu_749_p0);
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( grp_fu_749_p00 );

    SC_METHOD(thread_grp_fu_749_p00);
    sensitive << ( j_reg_293 );

    SC_METHOD(thread_grp_fu_749_p1);
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_grp_fu_749_p2);
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_i_4_fu_441_p2);
    sensitive << ( i_reg_281 );

    SC_METHOD(thread_i_5_fu_727_p2);
    sensitive << ( i_i_reg_352 );

    SC_METHOD(thread_i_mid2_fu_518_p3);
    sensitive << ( exitcond_reg_793 );
    sensitive << ( i_reg_281 );
    sensitive << ( i_4_fu_441_p2 );

    SC_METHOD(thread_img_port_ARADDR);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_mid2_fu_460_p3 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_30_reg_763 );
    sensitive << ( img_port_addr_reg_830 );
    sensitive << ( img_port_addr_3_reg_910 );
    sensitive << ( ap_reg_ioackin_img_port_ARREADY );

    SC_METHOD(thread_img_port_ARLEN);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_mid2_fu_460_p3 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_reg_ioackin_img_port_ARREADY );

    SC_METHOD(thread_img_port_ARVALID);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_mid2_fu_460_p3 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_reg_ioackin_img_port_ARREADY );

    SC_METHOD(thread_img_port_AWVALID);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_CONV_fu_363_ap_done );
    sensitive << ( ap_reg_ioackin_img_port_AWREADY );

    SC_METHOD(thread_img_port_BREADY);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( img_port_BVALID );

    SC_METHOD(thread_img_port_RREADY);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( exitcond2_reg_896 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond4_reg_926 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_reg_842 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_block_pp3_stage0_11001 );

    SC_METHOD(thread_img_port_WVALID);
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( exitcond3_reg_872_pp1_iter1_reg );
    sensitive << ( ap_reg_ioackin_img_port_WREADY );
    sensitive << ( ap_block_pp1_stage0_01001 );

    SC_METHOD(thread_img_port_blk_n_AR);
    sensitive << ( m_axi_img_port_ARREADY );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_mid2_fu_460_p3 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_img_port_blk_n_AW);
    sensitive << ( m_axi_img_port_AWREADY );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_img_port_blk_n_B);
    sensitive << ( m_axi_img_port_BVALID );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_img_port_blk_n_R);
    sensitive << ( m_axi_img_port_RVALID );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( exitcond2_reg_896 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_block_pp3_stage0 );
    sensitive << ( exitcond4_reg_926 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond1_reg_842 );

    SC_METHOD(thread_img_port_blk_n_W);
    sensitive << ( m_axi_img_port_WREADY );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( exitcond3_reg_872_pp1_iter1_reg );

    SC_METHOD(thread_indvar2_fu_549_p1);
    sensitive << ( indvar_reg_305_pp0_iter1_reg );

    SC_METHOD(thread_indvar3_fu_643_p1);
    sensitive << ( indvar1_reg_328_pp2_iter1_reg );

    SC_METHOD(thread_indvar6_fu_621_p1);
    sensitive << ( indvar4_reg_317 );

    SC_METHOD(thread_indvar7_fu_681_p1);
    sensitive << ( indvar5_reg_340_pp3_iter1_reg );

    SC_METHOD(thread_indvar_flatten_next_fu_429_p2);
    sensitive << ( indvar_flatten_reg_270 );

    SC_METHOD(thread_indvar_next1_fu_637_p2);
    sensitive << ( ap_phi_mux_indvar1_phi_fu_332_p4 );

    SC_METHOD(thread_indvar_next2_fu_615_p2);
    sensitive << ( indvar4_reg_317 );

    SC_METHOD(thread_indvar_next3_fu_675_p2);
    sensitive << ( ap_phi_mux_indvar5_phi_fu_344_p4 );

    SC_METHOD(thread_indvar_next_fu_543_p2);
    sensitive << ( ap_phi_mux_indvar_phi_fu_309_p4 );

    SC_METHOD(thread_j_4_fu_626_p2);
    sensitive << ( j_mid2_reg_803 );

    SC_METHOD(thread_j_mid2_fu_447_p3);
    sensitive << ( exitcond_reg_793 );
    sensitive << ( j_reg_293 );

    SC_METHOD(thread_kernel_address0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_CONV_fu_363_kernel_address0 );
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_kernel_ce0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_CONV_fu_363_kernel_ce0 );
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_p_shl1_fu_403_p3);
    sensitive << ( i_reg_281 );

    SC_METHOD(thread_p_shl1_mid1_fu_486_p3);
    sensitive << ( i_4_fu_441_p2 );

    SC_METHOD(thread_p_shl1_mid2_fu_494_p3);
    sensitive << ( p_shl1_reg_773 );
    sensitive << ( exitcond_reg_793 );
    sensitive << ( p_shl1_mid1_fu_486_p3 );

    SC_METHOD(thread_p_shl2_fu_576_p3);
    sensitive << ( tmp_42_fu_573_p1 );

    SC_METHOD(thread_p_shl3_fu_690_p3);
    sensitive << ( tmp_43_fu_686_p1 );

    SC_METHOD(thread_p_sum6_cast_fu_600_p1);
    sensitive << ( grp_fu_740_p3 );

    SC_METHOD(thread_p_sum_cast_fu_652_p1);
    sensitive << ( grp_fu_749_p3 );

    SC_METHOD(thread_sum2_fu_707_p2);
    sensitive << ( tmp_31_reg_779 );
    sensitive << ( tmp_53_cast_fu_703_p1 );

    SC_METHOD(thread_sum_fu_594_p2);
    sensitive << ( tmp_32_mid2_reg_820 );
    sensitive << ( tmp_44_cast_fu_590_p1 );

    SC_METHOD(thread_tmp_1_i_fu_733_p2);
    sensitive << ( buff_output_img_q0 );
    sensitive << ( buff_result_img_q0 );

    SC_METHOD(thread_tmp_30_fu_395_p1);
    sensitive << ( tmp_s_fu_389_p2 );

    SC_METHOD(thread_tmp_30_mid1_fu_470_p0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_30_mid1_fu_470_p00 );

    SC_METHOD(thread_tmp_30_mid1_fu_470_p00);
    sensitive << ( i_4_fu_441_p2 );

    SC_METHOD(thread_tmp_30_mid1_fu_470_p2);
    sensitive << ( tmp_30_mid1_fu_470_p0 );

    SC_METHOD(thread_tmp_31_fu_411_p5);
    sensitive << ( i_reg_281 );

    SC_METHOD(thread_tmp_31_mid2_cast_fu_482_p1);
    sensitive << ( tmp_31_mid2_fu_476_p3 );

    SC_METHOD(thread_tmp_31_mid2_fu_476_p3);
    sensitive << ( tmp_41_reg_768 );
    sensitive << ( exitcond_reg_793 );
    sensitive << ( tmp_30_mid1_fu_470_p2 );

    SC_METHOD(thread_tmp_32_mid1_fu_500_p5);
    sensitive << ( i_4_fu_441_p2 );

    SC_METHOD(thread_tmp_32_mid2_fu_512_p3);
    sensitive << ( tmp_31_reg_779 );
    sensitive << ( exitcond_reg_793 );
    sensitive << ( tmp_32_mid1_fu_500_p5 );

    SC_METHOD(thread_tmp_33_fu_584_p2);
    sensitive << ( tmp_42_cast_fu_570_p1 );
    sensitive << ( p_shl2_fu_576_p3 );

    SC_METHOD(thread_tmp_34_fu_557_p2);
    sensitive << ( p_shl1_mid2_reg_815 );
    sensitive << ( tmp_42_cast6_fu_554_p1 );

    SC_METHOD(thread_tmp_35_fu_562_p1);
    sensitive << ( tmp_34_fu_557_p2 );

    SC_METHOD(thread_tmp_38_fu_698_p2);
    sensitive << ( tmp_49_cast_reg_921 );
    sensitive << ( p_shl3_fu_690_p3 );

    SC_METHOD(thread_tmp_39_fu_712_p2);
    sensitive << ( p_shl1_reg_773 );
    sensitive << ( tmp_49_cast2_reg_916 );

    SC_METHOD(thread_tmp_40_fu_716_p1);
    sensitive << ( tmp_39_fu_712_p2 );

    SC_METHOD(thread_tmp_41_fu_399_p1);
    sensitive << ( tmp_s_fu_389_p2 );

    SC_METHOD(thread_tmp_42_cast6_fu_554_p1);
    sensitive << ( j_mid2_reg_803 );

    SC_METHOD(thread_tmp_42_cast_fu_570_p1);
    sensitive << ( j_mid2_reg_803 );

    SC_METHOD(thread_tmp_42_fu_573_p1);
    sensitive << ( j_mid2_reg_803 );

    SC_METHOD(thread_tmp_43_fu_686_p1);
    sensitive << ( j_reg_293 );

    SC_METHOD(thread_tmp_44_cast_fu_590_p1);
    sensitive << ( tmp_33_fu_584_p2 );

    SC_METHOD(thread_tmp_49_cast2_fu_661_p1);
    sensitive << ( j_reg_293 );

    SC_METHOD(thread_tmp_49_cast_fu_665_p1);
    sensitive << ( j_reg_293 );

    SC_METHOD(thread_tmp_53_cast_fu_703_p1);
    sensitive << ( tmp_38_fu_698_p2 );

    SC_METHOD(thread_tmp_fu_379_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_281 );

    SC_METHOD(thread_tmp_i_fu_721_p1);
    sensitive << ( i_i_reg_352 );

    SC_METHOD(thread_tmp_mid1_fu_454_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_reg_793 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( i_4_fu_441_p2 );

    SC_METHOD(thread_tmp_mid2_fu_460_p3);
    sensitive << ( tmp_reg_758 );
    sensitive << ( exitcond_reg_793 );
    sensitive << ( tmp_mid1_fu_454_p2 );

    SC_METHOD(thread_tmp_s_fu_389_p1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_s_fu_389_p10 );

    SC_METHOD(thread_tmp_s_fu_389_p10);
    sensitive << ( i_reg_281 );

    SC_METHOD(thread_tmp_s_fu_389_p2);
    sensitive << ( tmp_s_fu_389_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_mid2_fu_460_p3 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( img_port_BVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten_fu_423_p2 );
    sensitive << ( ap_sig_ioackin_img_port_ARREADY );
    sensitive << ( ap_block_state3_io );
    sensitive << ( exitcond1_fu_537_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond3_fu_609_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond2_fu_631_p2 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( exitcond4_fu_669_p2 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_sig_ioackin_img_port_AWREADY );
    sensitive << ( grp_CONV_fu_363_ap_done );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_block_pp2_stage0_subdone );
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( ap_block_pp3_stage0_subdone );
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( ap_CS_fsm_state47 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const5);

    ap_CS_fsm = "00000000000000000000000000000000000000001";
    ap_enable_reg_pp2_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter2 = SC_LOGIC_0;
    grp_CONV_fu_363_ap_start_reg = SC_LOGIC_0;
    ap_reg_ioackin_img_port_ARREADY = SC_LOGIC_0;
    ap_reg_ioackin_img_port_AWREADY = SC_LOGIC_0;
    ap_reg_ioackin_img_port_WREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "CNN_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, m_axi_img_port_AWVALID, "(port)m_axi_img_port_AWVALID");
    sc_trace(mVcdFile, m_axi_img_port_AWREADY, "(port)m_axi_img_port_AWREADY");
    sc_trace(mVcdFile, m_axi_img_port_AWADDR, "(port)m_axi_img_port_AWADDR");
    sc_trace(mVcdFile, m_axi_img_port_AWID, "(port)m_axi_img_port_AWID");
    sc_trace(mVcdFile, m_axi_img_port_AWLEN, "(port)m_axi_img_port_AWLEN");
    sc_trace(mVcdFile, m_axi_img_port_AWSIZE, "(port)m_axi_img_port_AWSIZE");
    sc_trace(mVcdFile, m_axi_img_port_AWBURST, "(port)m_axi_img_port_AWBURST");
    sc_trace(mVcdFile, m_axi_img_port_AWLOCK, "(port)m_axi_img_port_AWLOCK");
    sc_trace(mVcdFile, m_axi_img_port_AWCACHE, "(port)m_axi_img_port_AWCACHE");
    sc_trace(mVcdFile, m_axi_img_port_AWPROT, "(port)m_axi_img_port_AWPROT");
    sc_trace(mVcdFile, m_axi_img_port_AWQOS, "(port)m_axi_img_port_AWQOS");
    sc_trace(mVcdFile, m_axi_img_port_AWREGION, "(port)m_axi_img_port_AWREGION");
    sc_trace(mVcdFile, m_axi_img_port_AWUSER, "(port)m_axi_img_port_AWUSER");
    sc_trace(mVcdFile, m_axi_img_port_WVALID, "(port)m_axi_img_port_WVALID");
    sc_trace(mVcdFile, m_axi_img_port_WREADY, "(port)m_axi_img_port_WREADY");
    sc_trace(mVcdFile, m_axi_img_port_WDATA, "(port)m_axi_img_port_WDATA");
    sc_trace(mVcdFile, m_axi_img_port_WSTRB, "(port)m_axi_img_port_WSTRB");
    sc_trace(mVcdFile, m_axi_img_port_WLAST, "(port)m_axi_img_port_WLAST");
    sc_trace(mVcdFile, m_axi_img_port_WID, "(port)m_axi_img_port_WID");
    sc_trace(mVcdFile, m_axi_img_port_WUSER, "(port)m_axi_img_port_WUSER");
    sc_trace(mVcdFile, m_axi_img_port_ARVALID, "(port)m_axi_img_port_ARVALID");
    sc_trace(mVcdFile, m_axi_img_port_ARREADY, "(port)m_axi_img_port_ARREADY");
    sc_trace(mVcdFile, m_axi_img_port_ARADDR, "(port)m_axi_img_port_ARADDR");
    sc_trace(mVcdFile, m_axi_img_port_ARID, "(port)m_axi_img_port_ARID");
    sc_trace(mVcdFile, m_axi_img_port_ARLEN, "(port)m_axi_img_port_ARLEN");
    sc_trace(mVcdFile, m_axi_img_port_ARSIZE, "(port)m_axi_img_port_ARSIZE");
    sc_trace(mVcdFile, m_axi_img_port_ARBURST, "(port)m_axi_img_port_ARBURST");
    sc_trace(mVcdFile, m_axi_img_port_ARLOCK, "(port)m_axi_img_port_ARLOCK");
    sc_trace(mVcdFile, m_axi_img_port_ARCACHE, "(port)m_axi_img_port_ARCACHE");
    sc_trace(mVcdFile, m_axi_img_port_ARPROT, "(port)m_axi_img_port_ARPROT");
    sc_trace(mVcdFile, m_axi_img_port_ARQOS, "(port)m_axi_img_port_ARQOS");
    sc_trace(mVcdFile, m_axi_img_port_ARREGION, "(port)m_axi_img_port_ARREGION");
    sc_trace(mVcdFile, m_axi_img_port_ARUSER, "(port)m_axi_img_port_ARUSER");
    sc_trace(mVcdFile, m_axi_img_port_RVALID, "(port)m_axi_img_port_RVALID");
    sc_trace(mVcdFile, m_axi_img_port_RREADY, "(port)m_axi_img_port_RREADY");
    sc_trace(mVcdFile, m_axi_img_port_RDATA, "(port)m_axi_img_port_RDATA");
    sc_trace(mVcdFile, m_axi_img_port_RLAST, "(port)m_axi_img_port_RLAST");
    sc_trace(mVcdFile, m_axi_img_port_RID, "(port)m_axi_img_port_RID");
    sc_trace(mVcdFile, m_axi_img_port_RUSER, "(port)m_axi_img_port_RUSER");
    sc_trace(mVcdFile, m_axi_img_port_RRESP, "(port)m_axi_img_port_RRESP");
    sc_trace(mVcdFile, m_axi_img_port_BVALID, "(port)m_axi_img_port_BVALID");
    sc_trace(mVcdFile, m_axi_img_port_BREADY, "(port)m_axi_img_port_BREADY");
    sc_trace(mVcdFile, m_axi_img_port_BRESP, "(port)m_axi_img_port_BRESP");
    sc_trace(mVcdFile, m_axi_img_port_BID, "(port)m_axi_img_port_BID");
    sc_trace(mVcdFile, m_axi_img_port_BUSER, "(port)m_axi_img_port_BUSER");
    sc_trace(mVcdFile, kernel_address0, "(port)kernel_address0");
    sc_trace(mVcdFile, kernel_ce0, "(port)kernel_ce0");
    sc_trace(mVcdFile, kernel_q0, "(port)kernel_q0");
    sc_trace(mVcdFile, bias_address0, "(port)bias_address0");
    sc_trace(mVcdFile, bias_ce0, "(port)bias_ce0");
    sc_trace(mVcdFile, bias_q0, "(port)bias_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, img_port_blk_n_AR, "img_port_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_mid2_fu_460_p3, "tmp_mid2_fu_460_p3");
    sc_trace(mVcdFile, img_port_blk_n_R, "img_port_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_pp2_stage0, "ap_CS_fsm_pp2_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter1, "ap_enable_reg_pp2_iter1");
    sc_trace(mVcdFile, ap_block_pp2_stage0, "ap_block_pp2_stage0");
    sc_trace(mVcdFile, exitcond2_reg_896, "exitcond2_reg_896");
    sc_trace(mVcdFile, img_port_blk_n_AW, "img_port_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, img_port_blk_n_W, "img_port_blk_n_W");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, exitcond3_reg_872, "exitcond3_reg_872");
    sc_trace(mVcdFile, exitcond3_reg_872_pp1_iter1_reg, "exitcond3_reg_872_pp1_iter1_reg");
    sc_trace(mVcdFile, img_port_blk_n_B, "img_port_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, ap_CS_fsm_pp3_stage0, "ap_CS_fsm_pp3_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter1, "ap_enable_reg_pp3_iter1");
    sc_trace(mVcdFile, ap_block_pp3_stage0, "ap_block_pp3_stage0");
    sc_trace(mVcdFile, exitcond4_reg_926, "exitcond4_reg_926");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, exitcond1_reg_842, "exitcond1_reg_842");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, img_port_AWVALID, "img_port_AWVALID");
    sc_trace(mVcdFile, img_port_AWREADY, "img_port_AWREADY");
    sc_trace(mVcdFile, img_port_WVALID, "img_port_WVALID");
    sc_trace(mVcdFile, img_port_WREADY, "img_port_WREADY");
    sc_trace(mVcdFile, img_port_ARVALID, "img_port_ARVALID");
    sc_trace(mVcdFile, img_port_ARREADY, "img_port_ARREADY");
    sc_trace(mVcdFile, img_port_ARADDR, "img_port_ARADDR");
    sc_trace(mVcdFile, img_port_ARLEN, "img_port_ARLEN");
    sc_trace(mVcdFile, img_port_RVALID, "img_port_RVALID");
    sc_trace(mVcdFile, img_port_RREADY, "img_port_RREADY");
    sc_trace(mVcdFile, img_port_RDATA, "img_port_RDATA");
    sc_trace(mVcdFile, img_port_RLAST, "img_port_RLAST");
    sc_trace(mVcdFile, img_port_RID, "img_port_RID");
    sc_trace(mVcdFile, img_port_RUSER, "img_port_RUSER");
    sc_trace(mVcdFile, img_port_RRESP, "img_port_RRESP");
    sc_trace(mVcdFile, img_port_BVALID, "img_port_BVALID");
    sc_trace(mVcdFile, img_port_BREADY, "img_port_BREADY");
    sc_trace(mVcdFile, img_port_BRESP, "img_port_BRESP");
    sc_trace(mVcdFile, img_port_BID, "img_port_BID");
    sc_trace(mVcdFile, img_port_BUSER, "img_port_BUSER");
    sc_trace(mVcdFile, indvar_reg_305, "indvar_reg_305");
    sc_trace(mVcdFile, indvar_reg_305_pp0_iter1_reg, "indvar_reg_305_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter0, "ap_block_state11_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter1, "ap_block_state12_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter2, "ap_block_state13_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, indvar4_reg_317, "indvar4_reg_317");
    sc_trace(mVcdFile, indvar1_reg_328, "indvar1_reg_328");
    sc_trace(mVcdFile, indvar1_reg_328_pp2_iter1_reg, "indvar1_reg_328_pp2_iter1_reg");
    sc_trace(mVcdFile, ap_block_state31_pp2_stage0_iter0, "ap_block_state31_pp2_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state32_pp2_stage0_iter1, "ap_block_state32_pp2_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state33_pp2_stage0_iter2, "ap_block_state33_pp2_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp2_stage0_11001, "ap_block_pp2_stage0_11001");
    sc_trace(mVcdFile, indvar5_reg_340, "indvar5_reg_340");
    sc_trace(mVcdFile, indvar5_reg_340_pp3_iter1_reg, "indvar5_reg_340_pp3_iter1_reg");
    sc_trace(mVcdFile, ap_block_state42_pp3_stage0_iter0, "ap_block_state42_pp3_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state43_pp3_stage0_iter1, "ap_block_state43_pp3_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state44_pp3_stage0_iter2, "ap_block_state44_pp3_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp3_stage0_11001, "ap_block_pp3_stage0_11001");
    sc_trace(mVcdFile, reg_374, "reg_374");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, tmp_fu_379_p2, "tmp_fu_379_p2");
    sc_trace(mVcdFile, tmp_reg_758, "tmp_reg_758");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_30_fu_395_p1, "tmp_30_fu_395_p1");
    sc_trace(mVcdFile, tmp_30_reg_763, "tmp_30_reg_763");
    sc_trace(mVcdFile, tmp_41_fu_399_p1, "tmp_41_fu_399_p1");
    sc_trace(mVcdFile, tmp_41_reg_768, "tmp_41_reg_768");
    sc_trace(mVcdFile, p_shl1_fu_403_p3, "p_shl1_fu_403_p3");
    sc_trace(mVcdFile, p_shl1_reg_773, "p_shl1_reg_773");
    sc_trace(mVcdFile, tmp_31_fu_411_p5, "tmp_31_fu_411_p5");
    sc_trace(mVcdFile, tmp_31_reg_779, "tmp_31_reg_779");
    sc_trace(mVcdFile, indvar_flatten_next_fu_429_p2, "indvar_flatten_next_fu_429_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_788, "indvar_flatten_next_reg_788");
    sc_trace(mVcdFile, exitcond_fu_435_p2, "exitcond_fu_435_p2");
    sc_trace(mVcdFile, exitcond_reg_793, "exitcond_reg_793");
    sc_trace(mVcdFile, exitcond_flatten_fu_423_p2, "exitcond_flatten_fu_423_p2");
    sc_trace(mVcdFile, j_mid2_fu_447_p3, "j_mid2_fu_447_p3");
    sc_trace(mVcdFile, j_mid2_reg_803, "j_mid2_reg_803");
    sc_trace(mVcdFile, ap_sig_ioackin_img_port_ARREADY, "ap_sig_ioackin_img_port_ARREADY");
    sc_trace(mVcdFile, ap_block_state3_io, "ap_block_state3_io");
    sc_trace(mVcdFile, p_shl1_mid2_fu_494_p3, "p_shl1_mid2_fu_494_p3");
    sc_trace(mVcdFile, p_shl1_mid2_reg_815, "p_shl1_mid2_reg_815");
    sc_trace(mVcdFile, tmp_32_mid2_fu_512_p3, "tmp_32_mid2_fu_512_p3");
    sc_trace(mVcdFile, tmp_32_mid2_reg_820, "tmp_32_mid2_reg_820");
    sc_trace(mVcdFile, i_mid2_fu_518_p3, "i_mid2_fu_518_p3");
    sc_trace(mVcdFile, i_mid2_reg_825, "i_mid2_reg_825");
    sc_trace(mVcdFile, img_port_addr_reg_830, "img_port_addr_reg_830");
    sc_trace(mVcdFile, exitcond1_fu_537_p2, "exitcond1_fu_537_p2");
    sc_trace(mVcdFile, exitcond1_reg_842_pp0_iter1_reg, "exitcond1_reg_842_pp0_iter1_reg");
    sc_trace(mVcdFile, indvar_next_fu_543_p2, "indvar_next_fu_543_p2");
    sc_trace(mVcdFile, indvar_next_reg_846, "indvar_next_reg_846");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, img_port_addr_read_reg_851, "img_port_addr_read_reg_851");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, sum_fu_594_p2, "sum_fu_594_p2");
    sc_trace(mVcdFile, sum_reg_861, "sum_reg_861");
    sc_trace(mVcdFile, img_port_addr_2_reg_866, "img_port_addr_2_reg_866");
    sc_trace(mVcdFile, exitcond3_fu_609_p2, "exitcond3_fu_609_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_block_state17_pp1_stage0_iter0, "ap_block_state17_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state18_pp1_stage0_iter1, "ap_block_state18_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state19_pp1_stage0_iter2, "ap_block_state19_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_sig_ioackin_img_port_WREADY, "ap_sig_ioackin_img_port_WREADY");
    sc_trace(mVcdFile, ap_block_state19_io, "ap_block_state19_io");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, indvar_next2_fu_615_p2, "indvar_next2_fu_615_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, buff_output_img_q0, "buff_output_img_q0");
    sc_trace(mVcdFile, buff_output_img_load_reg_886, "buff_output_img_load_reg_886");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, j_4_fu_626_p2, "j_4_fu_626_p2");
    sc_trace(mVcdFile, j_4_reg_891, "j_4_reg_891");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, exitcond2_fu_631_p2, "exitcond2_fu_631_p2");
    sc_trace(mVcdFile, exitcond2_reg_896_pp2_iter1_reg, "exitcond2_reg_896_pp2_iter1_reg");
    sc_trace(mVcdFile, indvar_next1_fu_637_p2, "indvar_next1_fu_637_p2");
    sc_trace(mVcdFile, indvar_next1_reg_900, "indvar_next1_reg_900");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter0, "ap_enable_reg_pp2_iter0");
    sc_trace(mVcdFile, img_port_addr_1_read_reg_905, "img_port_addr_1_read_reg_905");
    sc_trace(mVcdFile, img_port_addr_3_reg_910, "img_port_addr_3_reg_910");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, tmp_49_cast2_fu_661_p1, "tmp_49_cast2_fu_661_p1");
    sc_trace(mVcdFile, tmp_49_cast2_reg_916, "tmp_49_cast2_reg_916");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, tmp_49_cast_fu_665_p1, "tmp_49_cast_fu_665_p1");
    sc_trace(mVcdFile, tmp_49_cast_reg_921, "tmp_49_cast_reg_921");
    sc_trace(mVcdFile, exitcond4_fu_669_p2, "exitcond4_fu_669_p2");
    sc_trace(mVcdFile, exitcond4_reg_926_pp3_iter1_reg, "exitcond4_reg_926_pp3_iter1_reg");
    sc_trace(mVcdFile, indvar_next3_fu_675_p2, "indvar_next3_fu_675_p2");
    sc_trace(mVcdFile, indvar_next3_reg_930, "indvar_next3_reg_930");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter0, "ap_enable_reg_pp3_iter0");
    sc_trace(mVcdFile, img_port_addr_3_read_reg_935, "img_port_addr_3_read_reg_935");
    sc_trace(mVcdFile, sum2_fu_707_p2, "sum2_fu_707_p2");
    sc_trace(mVcdFile, sum2_reg_940, "sum2_reg_940");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, buff_output_img_addr_1_reg_955, "buff_output_img_addr_1_reg_955");
    sc_trace(mVcdFile, i_5_fu_727_p2, "i_5_fu_727_p2");
    sc_trace(mVcdFile, i_5_reg_960, "i_5_reg_960");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state11, "ap_condition_pp0_exit_iter0_state11");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_sig_ioackin_img_port_AWREADY, "ap_sig_ioackin_img_port_AWREADY");
    sc_trace(mVcdFile, grp_CONV_fu_363_ap_ready, "grp_CONV_fu_363_ap_ready");
    sc_trace(mVcdFile, grp_CONV_fu_363_ap_done, "grp_CONV_fu_363_ap_done");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state17, "ap_condition_pp1_exit_iter0_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, ap_block_pp2_stage0_subdone, "ap_block_pp2_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp2_exit_iter0_state31, "ap_condition_pp2_exit_iter0_state31");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter2, "ap_enable_reg_pp2_iter2");
    sc_trace(mVcdFile, ap_block_pp3_stage0_subdone, "ap_block_pp3_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp3_exit_iter0_state42, "ap_condition_pp3_exit_iter0_state42");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter2, "ap_enable_reg_pp3_iter2");
    sc_trace(mVcdFile, buff_input_img_ce0, "buff_input_img_ce0");
    sc_trace(mVcdFile, buff_input_img_q0, "buff_input_img_q0");
    sc_trace(mVcdFile, buff_input_img_address1, "buff_input_img_address1");
    sc_trace(mVcdFile, buff_input_img_ce1, "buff_input_img_ce1");
    sc_trace(mVcdFile, buff_input_img_we1, "buff_input_img_we1");
    sc_trace(mVcdFile, buff_input_img_d1, "buff_input_img_d1");
    sc_trace(mVcdFile, buff_output_img_address0, "buff_output_img_address0");
    sc_trace(mVcdFile, buff_output_img_ce0, "buff_output_img_ce0");
    sc_trace(mVcdFile, buff_output_img_we0, "buff_output_img_we0");
    sc_trace(mVcdFile, buff_output_img_d0, "buff_output_img_d0");
    sc_trace(mVcdFile, buff_result_img_address0, "buff_result_img_address0");
    sc_trace(mVcdFile, buff_result_img_ce0, "buff_result_img_ce0");
    sc_trace(mVcdFile, buff_result_img_we0, "buff_result_img_we0");
    sc_trace(mVcdFile, buff_result_img_q0, "buff_result_img_q0");
    sc_trace(mVcdFile, grp_CONV_fu_363_ap_start, "grp_CONV_fu_363_ap_start");
    sc_trace(mVcdFile, grp_CONV_fu_363_ap_idle, "grp_CONV_fu_363_ap_idle");
    sc_trace(mVcdFile, grp_CONV_fu_363_input_img_address0, "grp_CONV_fu_363_input_img_address0");
    sc_trace(mVcdFile, grp_CONV_fu_363_input_img_ce0, "grp_CONV_fu_363_input_img_ce0");
    sc_trace(mVcdFile, grp_CONV_fu_363_kernel_address0, "grp_CONV_fu_363_kernel_address0");
    sc_trace(mVcdFile, grp_CONV_fu_363_kernel_ce0, "grp_CONV_fu_363_kernel_ce0");
    sc_trace(mVcdFile, grp_CONV_fu_363_kernel_offset, "grp_CONV_fu_363_kernel_offset");
    sc_trace(mVcdFile, grp_CONV_fu_363_output_img_address0, "grp_CONV_fu_363_output_img_address0");
    sc_trace(mVcdFile, grp_CONV_fu_363_output_img_ce0, "grp_CONV_fu_363_output_img_ce0");
    sc_trace(mVcdFile, grp_CONV_fu_363_output_img_we0, "grp_CONV_fu_363_output_img_we0");
    sc_trace(mVcdFile, grp_CONV_fu_363_output_img_d0, "grp_CONV_fu_363_output_img_d0");
    sc_trace(mVcdFile, indvar_flatten_reg_270, "indvar_flatten_reg_270");
    sc_trace(mVcdFile, i_reg_281, "i_reg_281");
    sc_trace(mVcdFile, j_reg_293, "j_reg_293");
    sc_trace(mVcdFile, ap_phi_mux_indvar_phi_fu_309_p4, "ap_phi_mux_indvar_phi_fu_309_p4");
    sc_trace(mVcdFile, ap_phi_mux_indvar1_phi_fu_332_p4, "ap_phi_mux_indvar1_phi_fu_332_p4");
    sc_trace(mVcdFile, ap_phi_mux_indvar5_phi_fu_344_p4, "ap_phi_mux_indvar5_phi_fu_344_p4");
    sc_trace(mVcdFile, i_i_reg_352, "i_i_reg_352");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, grp_CONV_fu_363_ap_start_reg, "grp_CONV_fu_363_ap_start_reg");
    sc_trace(mVcdFile, indvar2_fu_549_p1, "indvar2_fu_549_p1");
    sc_trace(mVcdFile, tmp_35_fu_562_p1, "tmp_35_fu_562_p1");
    sc_trace(mVcdFile, indvar6_fu_621_p1, "indvar6_fu_621_p1");
    sc_trace(mVcdFile, indvar3_fu_643_p1, "indvar3_fu_643_p1");
    sc_trace(mVcdFile, indvar7_fu_681_p1, "indvar7_fu_681_p1");
    sc_trace(mVcdFile, tmp_40_fu_716_p1, "tmp_40_fu_716_p1");
    sc_trace(mVcdFile, tmp_i_fu_721_p1, "tmp_i_fu_721_p1");
    sc_trace(mVcdFile, tmp_31_mid2_cast_fu_482_p1, "tmp_31_mid2_cast_fu_482_p1");
    sc_trace(mVcdFile, p_sum6_cast_fu_600_p1, "p_sum6_cast_fu_600_p1");
    sc_trace(mVcdFile, p_sum_cast_fu_652_p1, "p_sum_cast_fu_652_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_img_port_ARREADY, "ap_reg_ioackin_img_port_ARREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_img_port_AWREADY, "ap_reg_ioackin_img_port_AWREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_img_port_WREADY, "ap_reg_ioackin_img_port_WREADY");
    sc_trace(mVcdFile, ap_block_pp1_stage0_01001, "ap_block_pp1_stage0_01001");
    sc_trace(mVcdFile, tmp_1_i_fu_733_p2, "tmp_1_i_fu_733_p2");
    sc_trace(mVcdFile, tmp_s_fu_389_p1, "tmp_s_fu_389_p1");
    sc_trace(mVcdFile, tmp_s_fu_389_p2, "tmp_s_fu_389_p2");
    sc_trace(mVcdFile, i_4_fu_441_p2, "i_4_fu_441_p2");
    sc_trace(mVcdFile, tmp_mid1_fu_454_p2, "tmp_mid1_fu_454_p2");
    sc_trace(mVcdFile, tmp_30_mid1_fu_470_p0, "tmp_30_mid1_fu_470_p0");
    sc_trace(mVcdFile, tmp_30_mid1_fu_470_p2, "tmp_30_mid1_fu_470_p2");
    sc_trace(mVcdFile, tmp_31_mid2_fu_476_p3, "tmp_31_mid2_fu_476_p3");
    sc_trace(mVcdFile, p_shl1_mid1_fu_486_p3, "p_shl1_mid1_fu_486_p3");
    sc_trace(mVcdFile, tmp_32_mid1_fu_500_p5, "tmp_32_mid1_fu_500_p5");
    sc_trace(mVcdFile, tmp_42_cast6_fu_554_p1, "tmp_42_cast6_fu_554_p1");
    sc_trace(mVcdFile, tmp_34_fu_557_p2, "tmp_34_fu_557_p2");
    sc_trace(mVcdFile, tmp_42_fu_573_p1, "tmp_42_fu_573_p1");
    sc_trace(mVcdFile, tmp_42_cast_fu_570_p1, "tmp_42_cast_fu_570_p1");
    sc_trace(mVcdFile, p_shl2_fu_576_p3, "p_shl2_fu_576_p3");
    sc_trace(mVcdFile, tmp_33_fu_584_p2, "tmp_33_fu_584_p2");
    sc_trace(mVcdFile, tmp_44_cast_fu_590_p1, "tmp_44_cast_fu_590_p1");
    sc_trace(mVcdFile, grp_fu_740_p3, "grp_fu_740_p3");
    sc_trace(mVcdFile, grp_fu_749_p3, "grp_fu_749_p3");
    sc_trace(mVcdFile, tmp_43_fu_686_p1, "tmp_43_fu_686_p1");
    sc_trace(mVcdFile, p_shl3_fu_690_p3, "p_shl3_fu_690_p3");
    sc_trace(mVcdFile, tmp_38_fu_698_p2, "tmp_38_fu_698_p2");
    sc_trace(mVcdFile, tmp_53_cast_fu_703_p1, "tmp_53_cast_fu_703_p1");
    sc_trace(mVcdFile, tmp_39_fu_712_p2, "tmp_39_fu_712_p2");
    sc_trace(mVcdFile, grp_fu_740_p0, "grp_fu_740_p0");
    sc_trace(mVcdFile, grp_fu_740_p1, "grp_fu_740_p1");
    sc_trace(mVcdFile, grp_fu_740_p2, "grp_fu_740_p2");
    sc_trace(mVcdFile, grp_fu_749_p0, "grp_fu_749_p0");
    sc_trace(mVcdFile, grp_fu_749_p1, "grp_fu_749_p1");
    sc_trace(mVcdFile, grp_fu_749_p2, "grp_fu_749_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, ap_idle_pp2, "ap_idle_pp2");
    sc_trace(mVcdFile, ap_enable_pp2, "ap_enable_pp2");
    sc_trace(mVcdFile, ap_idle_pp3, "ap_idle_pp3");
    sc_trace(mVcdFile, ap_enable_pp3, "ap_enable_pp3");
    sc_trace(mVcdFile, grp_fu_740_p10, "grp_fu_740_p10");
    sc_trace(mVcdFile, grp_fu_749_p00, "grp_fu_749_p00");
    sc_trace(mVcdFile, tmp_30_mid1_fu_470_p00, "tmp_30_mid1_fu_470_p00");
    sc_trace(mVcdFile, tmp_s_fu_389_p10, "tmp_s_fu_389_p10");
#endif

    }
    mHdltvinHandle.open("CNN.hdltvin.dat");
    mHdltvoutHandle.open("CNN.hdltvout.dat");
}

CNN::~CNN() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete CNN_img_port_m_axi_U;
    delete buff_input_img_U;
    delete buff_output_img_U;
    delete buff_result_img_U;
    delete grp_CONV_fu_363;
    delete CNN_mac_muladd_15cud_U13;
    delete CNN_mac_muladd_4ndEe_U14;
}

void CNN::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void CNN::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_logic_0;
}

void CNN::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv1_0;
}

void CNN::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv1_1;
}

void CNN::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv2_0;
}

void CNN::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv4_0;
}

void CNN::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv3_0;
}

void CNN::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv32_2584;
}

void CNN::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state11.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state11.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state11.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state17.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_img_port_AWREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_CONV_fu_363_ap_done.read())))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state17.read())) {
                ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state17.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_img_port_AWREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_CONV_fu_363_ap_done.read())))) {
            ap_enable_reg_pp1_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state31.read()))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state31.read())) {
                ap_enable_reg_pp2_iter1 = (ap_condition_pp2_exit_iter0_state31.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp2_iter1 = ap_enable_reg_pp2_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp2_iter2 = ap_enable_reg_pp2_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
            ap_enable_reg_pp2_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp3_exit_iter0_state42.read()))) {
            ap_enable_reg_pp3_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
            ap_enable_reg_pp3_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp3_exit_iter0_state42.read())) {
                ap_enable_reg_pp3_iter1 = (ap_condition_pp3_exit_iter0_state42.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp3_iter1 = ap_enable_reg_pp3_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp3_iter2 = ap_enable_reg_pp3_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
            ap_enable_reg_pp3_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_img_port_ARREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
              esl_seteq<1,1,1>(tmp_mid2_fu_460_p3.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_block_state3_io.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_img_port_ARREADY.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_img_port_ARREADY.read(), ap_const_logic_1)))) {
            ap_reg_ioackin_img_port_ARREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                     esl_seteq<1,1,1>(tmp_mid2_fu_460_p3.read(), ap_const_lv1_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, img_port_ARREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, img_port_ARREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, img_port_ARREADY.read())))) {
            ap_reg_ioackin_img_port_ARREADY = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_img_port_AWREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
            if (!(esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_img_port_AWREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_CONV_fu_363_ap_done.read()))) {
                ap_reg_ioackin_img_port_AWREADY = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(grp_CONV_fu_363_ap_done.read(), ap_const_logic_1) && 
                        esl_seteq<1,1,1>(ap_const_logic_1, img_port_AWREADY.read()))) {
                ap_reg_ioackin_img_port_AWREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_img_port_WREADY = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_reg_872_pp1_iter1_reg.read()))) {
            if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_img_port_WREADY = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, img_port_WREADY.read()) && 
                        esl_seteq<1,1,1>(ap_block_pp1_stage0_01001.read(), ap_const_boolean_0))) {
                ap_reg_ioackin_img_port_WREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_CONV_fu_363_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()))) {
            grp_CONV_fu_363_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_CONV_fu_363_ap_ready.read())) {
            grp_CONV_fu_363_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        i_i_reg_352 = i_5_reg_960.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
                esl_seteq<1,1,1>(grp_CONV_fu_363_ap_done.read(), ap_const_logic_1))) {
        i_i_reg_352 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
         esl_seteq<1,1,1>(img_port_BVALID.read(), ap_const_logic_1))) {
        i_reg_281 = i_mid2_reg_825.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_281 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        indvar1_reg_328 = ap_const_lv14_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_896.read()) && 
                esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        indvar1_reg_328 = indvar_next1_reg_900.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_609_p2.read()))) {
        indvar4_reg_317 = indvar_next2_fu_615_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_img_port_AWREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_CONV_fu_363_ap_done.read())))) {
        indvar4_reg_317 = ap_const_lv14_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_926.read()) && 
         esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0))) {
        indvar5_reg_340 = indvar_next3_reg_930.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        indvar5_reg_340 = ap_const_lv14_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
         esl_seteq<1,1,1>(img_port_BVALID.read(), ap_const_logic_1))) {
        indvar_flatten_reg_270 = indvar_flatten_next_reg_788.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_270 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        indvar_reg_305 = ap_const_lv14_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_842.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        indvar_reg_305 = indvar_next_reg_846.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
         esl_seteq<1,1,1>(img_port_BVALID.read(), ap_const_logic_1))) {
        j_reg_293 = j_4_reg_891.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_reg_293 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        buff_output_img_addr_1_reg_955 =  (sc_lv<14>) (tmp_i_fu_721_p1.read());
        i_5_reg_960 = i_5_fu_727_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_reg_872.read()))) {
        buff_output_img_load_reg_886 = buff_output_img_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond1_reg_842 = exitcond1_fu_537_p2.read();
        exitcond1_reg_842_pp0_iter1_reg = exitcond1_reg_842.read();
        indvar_reg_305_pp0_iter1_reg = indvar_reg_305.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond2_reg_896 = exitcond2_fu_631_p2.read();
        exitcond2_reg_896_pp2_iter1_reg = exitcond2_reg_896.read();
        indvar1_reg_328_pp2_iter1_reg = indvar1_reg_328.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond3_reg_872 = exitcond3_fu_609_p2.read();
        exitcond3_reg_872_pp1_iter1_reg = exitcond3_reg_872.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond4_reg_926 = exitcond4_fu_669_p2.read();
        exitcond4_reg_926_pp3_iter1_reg = exitcond4_reg_926.read();
        indvar5_reg_340_pp3_iter1_reg = indvar5_reg_340.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_423_p2.read()))) {
        exitcond_reg_793 = exitcond_fu_435_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_block_state3_io.read(), ap_const_boolean_0))) {
        i_mid2_reg_825 = i_mid2_fu_518_p3.read();
        j_mid2_reg_803 = j_mid2_fu_447_p3.read();
        p_shl1_mid2_reg_815 = p_shl1_mid2_fu_494_p3.read();
        tmp_32_mid2_reg_820 = tmp_32_mid2_fu_512_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_896.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        img_port_addr_1_read_reg_905 = img_port_RDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        img_port_addr_2_reg_866 =  (sc_lv<32>) (p_sum6_cast_fu_600_p1.read());
        sum_reg_861 = sum_fu_594_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_926.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0))) {
        img_port_addr_3_read_reg_935 = img_port_RDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        img_port_addr_3_reg_910 =  (sc_lv<32>) (p_sum_cast_fu_652_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_842.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        img_port_addr_read_reg_851 = img_port_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_block_state3_io.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_mid2_fu_460_p3.read(), ap_const_lv1_1))) {
        img_port_addr_reg_830 =  (sc_lv<32>) (tmp_31_mid2_cast_fu_482_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        indvar_flatten_next_reg_788 = indvar_flatten_next_fu_429_p2.read();
        p_shl1_reg_773 = p_shl1_fu_403_p3.read();
        tmp_30_reg_763 = tmp_30_fu_395_p1.read();
        tmp_31_reg_779 = tmp_31_fu_411_p5.read();
        tmp_41_reg_768 = tmp_41_fu_399_p1.read();
        tmp_reg_758 = tmp_fu_379_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()))) {
        indvar_next1_reg_900 = indvar_next1_fu_637_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()))) {
        indvar_next3_reg_930 = indvar_next3_fu_675_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        indvar_next_reg_846 = indvar_next_fu_543_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        j_4_reg_891 = j_4_fu_626_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()))) {
        reg_374 = bias_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        sum2_reg_940 = sum2_fu_707_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        tmp_49_cast2_reg_916 = tmp_49_cast2_fu_661_p1.read();
        tmp_49_cast_reg_921 = tmp_49_cast_fu_665_p1.read();
    }
}

void CNN::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[10];
}

void CNN::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[14];
}

void CNN::thread_ap_CS_fsm_pp2_stage0() {
    ap_CS_fsm_pp2_stage0 = ap_CS_fsm.read()[26];
}

void CNN::thread_ap_CS_fsm_pp3_stage0() {
    ap_CS_fsm_pp3_stage0 = ap_CS_fsm.read()[35];
}

void CNN::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void CNN::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void CNN::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[11];
}

void CNN::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[12];
}

void CNN::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[13];
}

void CNN::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void CNN::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[15];
}

void CNN::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[19];
}

void CNN::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void CNN::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[25];
}

void CNN::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[27];
}

void CNN::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[28];
}

void CNN::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void CNN::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[34];
}

void CNN::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[36];
}

void CNN::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[37];
}

void CNN::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[38];
}

void CNN::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[39];
}

void CNN::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[40];
}

void CNN::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void CNN::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_842.read()) && esl_seteq<1,1,1>(ap_const_logic_0, img_port_RVALID.read()));
}

void CNN::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_842.read()) && esl_seteq<1,1,1>(ap_const_logic_0, img_port_RVALID.read()));
}

void CNN::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void CNN::thread_ap_block_pp1_stage0_01001() {
    ap_block_pp1_stage0_01001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void CNN::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state19_io.read()));
}

void CNN::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state19_io.read()));
}

void CNN::thread_ap_block_pp2_stage0() {
    ap_block_pp2_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void CNN::thread_ap_block_pp2_stage0_11001() {
    ap_block_pp2_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_896.read()) && esl_seteq<1,1,1>(ap_const_logic_0, img_port_RVALID.read()));
}

void CNN::thread_ap_block_pp2_stage0_subdone() {
    ap_block_pp2_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_896.read()) && esl_seteq<1,1,1>(ap_const_logic_0, img_port_RVALID.read()));
}

void CNN::thread_ap_block_pp3_stage0() {
    ap_block_pp3_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void CNN::thread_ap_block_pp3_stage0_11001() {
    ap_block_pp3_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_926.read()) && esl_seteq<1,1,1>(ap_const_logic_0, img_port_RVALID.read()));
}

void CNN::thread_ap_block_pp3_stage0_subdone() {
    ap_block_pp3_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_926.read()) && esl_seteq<1,1,1>(ap_const_logic_0, img_port_RVALID.read()));
}

void CNN::thread_ap_block_state11_pp0_stage0_iter0() {
    ap_block_state11_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void CNN::thread_ap_block_state12_pp0_stage0_iter1() {
    ap_block_state12_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_842.read()) && esl_seteq<1,1,1>(ap_const_logic_0, img_port_RVALID.read()));
}

void CNN::thread_ap_block_state13_pp0_stage0_iter2() {
    ap_block_state13_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void CNN::thread_ap_block_state17_pp1_stage0_iter0() {
    ap_block_state17_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void CNN::thread_ap_block_state18_pp1_stage0_iter1() {
    ap_block_state18_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void CNN::thread_ap_block_state19_io() {
    ap_block_state19_io = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_reg_872_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_img_port_WREADY.read()));
}

void CNN::thread_ap_block_state19_pp1_stage0_iter2() {
    ap_block_state19_pp1_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void CNN::thread_ap_block_state31_pp2_stage0_iter0() {
    ap_block_state31_pp2_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void CNN::thread_ap_block_state32_pp2_stage0_iter1() {
    ap_block_state32_pp2_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_896.read()) && esl_seteq<1,1,1>(ap_const_logic_0, img_port_RVALID.read()));
}

void CNN::thread_ap_block_state33_pp2_stage0_iter2() {
    ap_block_state33_pp2_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void CNN::thread_ap_block_state3_io() {
    ap_block_state3_io = (esl_seteq<1,1,1>(tmp_mid2_fu_460_p3.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_img_port_ARREADY.read()));
}

void CNN::thread_ap_block_state42_pp3_stage0_iter0() {
    ap_block_state42_pp3_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void CNN::thread_ap_block_state43_pp3_stage0_iter1() {
    ap_block_state43_pp3_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_926.read()) && esl_seteq<1,1,1>(ap_const_logic_0, img_port_RVALID.read()));
}

void CNN::thread_ap_block_state44_pp3_stage0_iter2() {
    ap_block_state44_pp3_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void CNN::thread_ap_condition_pp0_exit_iter0_state11() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_537_p2.read())) {
        ap_condition_pp0_exit_iter0_state11 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state11 = ap_const_logic_0;
    }
}

void CNN::thread_ap_condition_pp1_exit_iter0_state17() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_609_p2.read())) {
        ap_condition_pp1_exit_iter0_state17 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state17 = ap_const_logic_0;
    }
}

void CNN::thread_ap_condition_pp2_exit_iter0_state31() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_631_p2.read())) {
        ap_condition_pp2_exit_iter0_state31 = ap_const_logic_1;
    } else {
        ap_condition_pp2_exit_iter0_state31 = ap_const_logic_0;
    }
}

void CNN::thread_ap_condition_pp3_exit_iter0_state42() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond4_fu_669_p2.read())) {
        ap_condition_pp3_exit_iter0_state42 = ap_const_logic_1;
    } else {
        ap_condition_pp3_exit_iter0_state42 = ap_const_logic_0;
    }
}

void CNN::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_fu_423_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void CNN::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void CNN::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void CNN::thread_ap_enable_pp2() {
    ap_enable_pp2 = (ap_idle_pp2.read() ^ ap_const_logic_1);
}

void CNN::thread_ap_enable_pp3() {
    ap_enable_pp3 = (ap_idle_pp3.read() ^ ap_const_logic_1);
}

void CNN::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void CNN::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void CNN::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void CNN::thread_ap_idle_pp2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter2.read()))) {
        ap_idle_pp2 = ap_const_logic_1;
    } else {
        ap_idle_pp2 = ap_const_logic_0;
    }
}

void CNN::thread_ap_idle_pp3() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp3_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp3_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp3_iter2.read()))) {
        ap_idle_pp3 = ap_const_logic_1;
    } else {
        ap_idle_pp3 = ap_const_logic_0;
    }
}

void CNN::thread_ap_phi_mux_indvar1_phi_fu_332_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_896.read()))) {
        ap_phi_mux_indvar1_phi_fu_332_p4 = indvar_next1_reg_900.read();
    } else {
        ap_phi_mux_indvar1_phi_fu_332_p4 = indvar1_reg_328.read();
    }
}

void CNN::thread_ap_phi_mux_indvar5_phi_fu_344_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp3_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_926.read()))) {
        ap_phi_mux_indvar5_phi_fu_344_p4 = indvar_next3_reg_930.read();
    } else {
        ap_phi_mux_indvar5_phi_fu_344_p4 = indvar5_reg_340.read();
    }
}

void CNN::thread_ap_phi_mux_indvar_phi_fu_309_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_842.read()))) {
        ap_phi_mux_indvar_phi_fu_309_p4 = indvar_next_reg_846.read();
    } else {
        ap_phi_mux_indvar_phi_fu_309_p4 = indvar_reg_305.read();
    }
}

void CNN::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_fu_423_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void CNN::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void CNN::thread_ap_sig_ioackin_img_port_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_img_port_ARREADY.read())) {
        ap_sig_ioackin_img_port_ARREADY = img_port_ARREADY.read();
    } else {
        ap_sig_ioackin_img_port_ARREADY = ap_const_logic_1;
    }
}

void CNN::thread_ap_sig_ioackin_img_port_AWREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_img_port_AWREADY.read())) {
        ap_sig_ioackin_img_port_AWREADY = img_port_AWREADY.read();
    } else {
        ap_sig_ioackin_img_port_AWREADY = ap_const_logic_1;
    }
}

void CNN::thread_ap_sig_ioackin_img_port_WREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_img_port_WREADY.read())) {
        ap_sig_ioackin_img_port_WREADY = img_port_WREADY.read();
    } else {
        ap_sig_ioackin_img_port_WREADY = ap_const_logic_1;
    }
}

void CNN::thread_bias_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        bias_address0 =  (sc_lv<3>) (tmp_40_fu_716_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        bias_address0 =  (sc_lv<3>) (tmp_35_fu_562_p1.read());
    } else {
        bias_address0 = "XXX";
    }
}

void CNN::thread_bias_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()))) {
        bias_ce0 = ap_const_logic_1;
    } else {
        bias_ce0 = ap_const_logic_0;
    }
}

void CNN::thread_buff_input_img_address1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()))) {
        buff_input_img_address1 =  (sc_lv<14>) (indvar3_fu_643_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        buff_input_img_address1 =  (sc_lv<14>) (indvar2_fu_549_p1.read());
    } else {
        buff_input_img_address1 =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
    }
}

void CNN::thread_buff_input_img_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()))) {
        buff_input_img_ce0 = grp_CONV_fu_363_input_img_ce0.read();
    } else {
        buff_input_img_ce0 = ap_const_logic_0;
    }
}

void CNN::thread_buff_input_img_ce1() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read())))) {
        buff_input_img_ce1 = ap_const_logic_1;
    } else {
        buff_input_img_ce1 = ap_const_logic_0;
    }
}

void CNN::thread_buff_input_img_d1() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()))) {
        buff_input_img_d1 = img_port_addr_1_read_reg_905.read();
    } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        buff_input_img_d1 = img_port_addr_read_reg_851.read();
    } else {
        buff_input_img_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void CNN::thread_buff_input_img_we1() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_842_pp0_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_896_pp2_iter1_reg.read())))) {
        buff_input_img_we1 = ap_const_logic_1;
    } else {
        buff_input_img_we1 = ap_const_logic_0;
    }
}

void CNN::thread_buff_output_img_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        buff_output_img_address0 = buff_output_img_addr_1_reg_955.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        buff_output_img_address0 =  (sc_lv<14>) (tmp_i_fu_721_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()))) {
        buff_output_img_address0 =  (sc_lv<14>) (indvar6_fu_621_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()))) {
        buff_output_img_address0 = grp_CONV_fu_363_output_img_address0.read();
    } else {
        buff_output_img_address0 =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
    }
}

void CNN::thread_buff_output_img_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()))) {
        buff_output_img_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()))) {
        buff_output_img_ce0 = grp_CONV_fu_363_output_img_ce0.read();
    } else {
        buff_output_img_ce0 = ap_const_logic_0;
    }
}

void CNN::thread_buff_output_img_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        buff_output_img_d0 = tmp_1_i_fu_733_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()))) {
        buff_output_img_d0 = grp_CONV_fu_363_output_img_d0.read();
    } else {
        buff_output_img_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void CNN::thread_buff_output_img_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        buff_output_img_we0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()))) {
        buff_output_img_we0 = grp_CONV_fu_363_output_img_we0.read();
    } else {
        buff_output_img_we0 = ap_const_logic_0;
    }
}

void CNN::thread_buff_result_img_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        buff_result_img_address0 =  (sc_lv<14>) (tmp_i_fu_721_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp3_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()))) {
        buff_result_img_address0 =  (sc_lv<14>) (indvar7_fu_681_p1.read());
    } else {
        buff_result_img_address0 =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
    }
}

void CNN::thread_buff_result_img_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         (esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read())))) {
        buff_result_img_ce0 = ap_const_logic_1;
    } else {
        buff_result_img_ce0 = ap_const_logic_0;
    }
}

void CNN::thread_buff_result_img_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_926_pp3_iter1_reg.read()))) {
        buff_result_img_we0 = ap_const_logic_1;
    } else {
        buff_result_img_we0 = ap_const_logic_0;
    }
}

void CNN::thread_exitcond1_fu_537_p2() {
    exitcond1_fu_537_p2 = (!ap_phi_mux_indvar_phi_fu_309_p4.read().is_01() || !ap_const_lv14_2710.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_phi_fu_309_p4.read() == ap_const_lv14_2710);
}

void CNN::thread_exitcond2_fu_631_p2() {
    exitcond2_fu_631_p2 = (!ap_phi_mux_indvar1_phi_fu_332_p4.read().is_01() || !ap_const_lv14_2710.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar1_phi_fu_332_p4.read() == ap_const_lv14_2710);
}

void CNN::thread_exitcond3_fu_609_p2() {
    exitcond3_fu_609_p2 = (!indvar4_reg_317.read().is_01() || !ap_const_lv14_2584.is_01())? sc_lv<1>(): sc_lv<1>(indvar4_reg_317.read() == ap_const_lv14_2584);
}

void CNN::thread_exitcond4_fu_669_p2() {
    exitcond4_fu_669_p2 = (!ap_phi_mux_indvar5_phi_fu_344_p4.read().is_01() || !ap_const_lv14_2584.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar5_phi_fu_344_p4.read() == ap_const_lv14_2584);
}

void CNN::thread_exitcond_flatten_fu_423_p2() {
    exitcond_flatten_fu_423_p2 = (!indvar_flatten_reg_270.read().is_01() || !ap_const_lv5_18.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_270.read() == ap_const_lv5_18);
}

void CNN::thread_exitcond_fu_435_p2() {
    exitcond_fu_435_p2 = (!j_reg_293.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_293.read() == ap_const_lv4_8);
}

void CNN::thread_grp_CONV_fu_363_ap_start() {
    grp_CONV_fu_363_ap_start = grp_CONV_fu_363_ap_start_reg.read();
}

void CNN::thread_grp_CONV_fu_363_kernel_offset() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        grp_CONV_fu_363_kernel_offset = sum2_reg_940.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_CONV_fu_363_kernel_offset = sum_reg_861.read();
    } else {
        grp_CONV_fu_363_kernel_offset =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void CNN::thread_grp_fu_740_p0() {
    grp_fu_740_p0 =  (sc_lv<15>) (ap_const_lv17_2584);
}

void CNN::thread_grp_fu_740_p1() {
    grp_fu_740_p1 =  (sc_lv<4>) (grp_fu_740_p10.read());
}

void CNN::thread_grp_fu_740_p10() {
    grp_fu_740_p10 = esl_zext<17,4>(j_mid2_reg_803.read());
}

void CNN::thread_grp_fu_740_p2() {
    grp_fu_740_p2 =  (sc_lv<16>) (ap_const_lv17_7530);
}

void CNN::thread_grp_fu_749_p0() {
    grp_fu_749_p0 =  (sc_lv<4>) (grp_fu_749_p00.read());
}

void CNN::thread_grp_fu_749_p00() {
    grp_fu_749_p00 = esl_zext<17,4>(j_reg_293.read());
}

void CNN::thread_grp_fu_749_p1() {
    grp_fu_749_p1 =  (sc_lv<15>) (ap_const_lv17_2584);
}

void CNN::thread_grp_fu_749_p2() {
    grp_fu_749_p2 =  (sc_lv<16>) (ap_const_lv17_7530);
}

void CNN::thread_i_4_fu_441_p2() {
    i_4_fu_441_p2 = (!i_reg_281.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_reg_281.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void CNN::thread_i_5_fu_727_p2() {
    i_5_fu_727_p2 = (!i_i_reg_352.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_bigint<8>(i_i_reg_352.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void CNN::thread_i_mid2_fu_518_p3() {
    i_mid2_fu_518_p3 = (!exitcond_reg_793.read()[0].is_01())? sc_lv<2>(): ((exitcond_reg_793.read()[0].to_bool())? i_4_fu_441_p2.read(): i_reg_281.read());
}

void CNN::thread_img_port_ARADDR() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_img_port_ARREADY.read())) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
            img_port_ARADDR = img_port_addr_3_reg_910.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            img_port_ARADDR = img_port_addr_reg_830.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                    esl_seteq<1,1,1>(tmp_mid2_fu_460_p3.read(), ap_const_lv1_0))) {
            img_port_ARADDR =  (sc_lv<32>) (tmp_30_reg_763.read());
        } else {
            img_port_ARADDR =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        img_port_ARADDR =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void CNN::thread_img_port_ARLEN() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_img_port_ARREADY.read()))) {
        img_port_ARLEN = ap_const_lv32_2584;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                 esl_seteq<1,1,1>(tmp_mid2_fu_460_p3.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_img_port_ARREADY.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_img_port_ARREADY.read())))) {
        img_port_ARLEN = ap_const_lv32_2710;
    } else {
        img_port_ARLEN =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void CNN::thread_img_port_ARVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(tmp_mid2_fu_460_p3.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_img_port_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_img_port_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_img_port_ARREADY.read())))) {
        img_port_ARVALID = ap_const_logic_1;
    } else {
        img_port_ARVALID = ap_const_logic_0;
    }
}

void CNN::thread_img_port_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(grp_CONV_fu_363_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_img_port_AWREADY.read()))) {
        img_port_AWVALID = ap_const_logic_1;
    } else {
        img_port_AWVALID = ap_const_logic_0;
    }
}

void CNN::thread_img_port_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
         esl_seteq<1,1,1>(img_port_BVALID.read(), ap_const_logic_1))) {
        img_port_BREADY = ap_const_logic_1;
    } else {
        img_port_BREADY = ap_const_logic_0;
    }
}

void CNN::thread_img_port_RREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_842.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_896.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_926.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0)))) {
        img_port_RREADY = ap_const_logic_1;
    } else {
        img_port_RREADY = ap_const_logic_0;
    }
}

void CNN::thread_img_port_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_reg_872_pp1_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_01001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_img_port_WREADY.read()))) {
        img_port_WVALID = ap_const_logic_1;
    } else {
        img_port_WVALID = ap_const_logic_0;
    }
}

void CNN::thread_img_port_blk_n_AR() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(tmp_mid2_fu_460_p3.read(), ap_const_lv1_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        img_port_blk_n_AR = m_axi_img_port_ARREADY.read();
    } else {
        img_port_blk_n_AR = ap_const_logic_1;
    }
}

void CNN::thread_img_port_blk_n_AW() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        img_port_blk_n_AW = m_axi_img_port_AWREADY.read();
    } else {
        img_port_blk_n_AW = ap_const_logic_1;
    }
}

void CNN::thread_img_port_blk_n_B() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        img_port_blk_n_B = m_axi_img_port_BVALID.read();
    } else {
        img_port_blk_n_B = ap_const_logic_1;
    }
}

void CNN::thread_img_port_blk_n_R() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_896.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_926.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_842.read())))) {
        img_port_blk_n_R = m_axi_img_port_RVALID.read();
    } else {
        img_port_blk_n_R = ap_const_logic_1;
    }
}

void CNN::thread_img_port_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_reg_872_pp1_iter1_reg.read()))) {
        img_port_blk_n_W = m_axi_img_port_WREADY.read();
    } else {
        img_port_blk_n_W = ap_const_logic_1;
    }
}

void CNN::thread_indvar2_fu_549_p1() {
    indvar2_fu_549_p1 = esl_zext<64,14>(indvar_reg_305_pp0_iter1_reg.read());
}

void CNN::thread_indvar3_fu_643_p1() {
    indvar3_fu_643_p1 = esl_zext<64,14>(indvar1_reg_328_pp2_iter1_reg.read());
}

void CNN::thread_indvar6_fu_621_p1() {
    indvar6_fu_621_p1 = esl_zext<64,14>(indvar4_reg_317.read());
}

void CNN::thread_indvar7_fu_681_p1() {
    indvar7_fu_681_p1 = esl_zext<64,14>(indvar5_reg_340_pp3_iter1_reg.read());
}

void CNN::thread_indvar_flatten_next_fu_429_p2() {
    indvar_flatten_next_fu_429_p2 = (!ap_const_lv5_1.is_01() || !indvar_flatten_reg_270.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_1) + sc_biguint<5>(indvar_flatten_reg_270.read()));
}

void CNN::thread_indvar_next1_fu_637_p2() {
    indvar_next1_fu_637_p2 = (!ap_phi_mux_indvar1_phi_fu_332_p4.read().is_01() || !ap_const_lv14_1.is_01())? sc_lv<14>(): (sc_biguint<14>(ap_phi_mux_indvar1_phi_fu_332_p4.read()) + sc_biguint<14>(ap_const_lv14_1));
}

void CNN::thread_indvar_next2_fu_615_p2() {
    indvar_next2_fu_615_p2 = (!indvar4_reg_317.read().is_01() || !ap_const_lv14_1.is_01())? sc_lv<14>(): (sc_biguint<14>(indvar4_reg_317.read()) + sc_biguint<14>(ap_const_lv14_1));
}

void CNN::thread_indvar_next3_fu_675_p2() {
    indvar_next3_fu_675_p2 = (!ap_phi_mux_indvar5_phi_fu_344_p4.read().is_01() || !ap_const_lv14_1.is_01())? sc_lv<14>(): (sc_biguint<14>(ap_phi_mux_indvar5_phi_fu_344_p4.read()) + sc_biguint<14>(ap_const_lv14_1));
}

void CNN::thread_indvar_next_fu_543_p2() {
    indvar_next_fu_543_p2 = (!ap_phi_mux_indvar_phi_fu_309_p4.read().is_01() || !ap_const_lv14_1.is_01())? sc_lv<14>(): (sc_biguint<14>(ap_phi_mux_indvar_phi_fu_309_p4.read()) + sc_biguint<14>(ap_const_lv14_1));
}

void CNN::thread_j_4_fu_626_p2() {
    j_4_fu_626_p2 = (!j_mid2_reg_803.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_mid2_reg_803.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void CNN::thread_j_mid2_fu_447_p3() {
    j_mid2_fu_447_p3 = (!exitcond_reg_793.read()[0].is_01())? sc_lv<4>(): ((exitcond_reg_793.read()[0].to_bool())? ap_const_lv4_0: j_reg_293.read());
}

void CNN::thread_kernel_address0() {
    kernel_address0 = grp_CONV_fu_363_kernel_address0.read();
}

void CNN::thread_kernel_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()))) {
        kernel_ce0 = grp_CONV_fu_363_kernel_ce0.read();
    } else {
        kernel_ce0 = ap_const_logic_0;
    }
}

void CNN::thread_p_shl1_fu_403_p3() {
    p_shl1_fu_403_p3 = esl_concat<2,3>(i_reg_281.read(), ap_const_lv3_0);
}

void CNN::thread_p_shl1_mid1_fu_486_p3() {
    p_shl1_mid1_fu_486_p3 = esl_concat<2,3>(i_4_fu_441_p2.read(), ap_const_lv3_0);
}

void CNN::thread_p_shl1_mid2_fu_494_p3() {
    p_shl1_mid2_fu_494_p3 = (!exitcond_reg_793.read()[0].is_01())? sc_lv<5>(): ((exitcond_reg_793.read()[0].to_bool())? p_shl1_mid1_fu_486_p3.read(): p_shl1_reg_773.read());
}

void CNN::thread_p_shl2_fu_576_p3() {
    p_shl2_fu_576_p3 = esl_concat<3,3>(tmp_42_fu_573_p1.read(), ap_const_lv3_0);
}

void CNN::thread_p_shl3_fu_690_p3() {
    p_shl3_fu_690_p3 = esl_concat<3,3>(tmp_43_fu_686_p1.read(), ap_const_lv3_0);
}

void CNN::thread_p_sum6_cast_fu_600_p1() {
    p_sum6_cast_fu_600_p1 = esl_zext<64,17>(grp_fu_740_p3.read());
}

void CNN::thread_p_sum_cast_fu_652_p1() {
    p_sum_cast_fu_652_p1 = esl_zext<64,17>(grp_fu_749_p3.read());
}

void CNN::thread_sum2_fu_707_p2() {
    sum2_fu_707_p2 = (!tmp_53_cast_fu_703_p1.read().is_01() || !tmp_31_reg_779.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_53_cast_fu_703_p1.read()) + sc_biguint<8>(tmp_31_reg_779.read()));
}

void CNN::thread_sum_fu_594_p2() {
    sum_fu_594_p2 = (!tmp_44_cast_fu_590_p1.read().is_01() || !tmp_32_mid2_reg_820.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_44_cast_fu_590_p1.read()) + sc_biguint<8>(tmp_32_mid2_reg_820.read()));
}

void CNN::thread_tmp_1_i_fu_733_p2() {
    tmp_1_i_fu_733_p2 = (!buff_output_img_q0.read().is_01() || !buff_result_img_q0.read().is_01())? sc_lv<8>(): (sc_biguint<8>(buff_output_img_q0.read()) + sc_biguint<8>(buff_result_img_q0.read()));
}

void CNN::thread_tmp_30_fu_395_p1() {
    tmp_30_fu_395_p1 = esl_zext<64,17>(tmp_s_fu_389_p2.read());
}

void CNN::thread_tmp_30_mid1_fu_470_p0() {
    tmp_30_mid1_fu_470_p0 =  (sc_lv<2>) (tmp_30_mid1_fu_470_p00.read());
}

void CNN::thread_tmp_30_mid1_fu_470_p00() {
    tmp_30_mid1_fu_470_p00 = esl_zext<15,2>(i_4_fu_441_p2.read());
}

void CNN::thread_tmp_30_mid1_fu_470_p2() {
    tmp_30_mid1_fu_470_p2 = (!tmp_30_mid1_fu_470_p0.read().is_01() || !ap_const_lv15_2710.is_01())? sc_lv<15>(): sc_biguint<2>(tmp_30_mid1_fu_470_p0.read()) * sc_biguint<15>(ap_const_lv15_2710);
}

void CNN::thread_tmp_31_fu_411_p5() {
    tmp_31_fu_411_p5 = esl_concat<5,3>(esl_concat<3,2>(esl_concat<2,1>(i_reg_281.read(), ap_const_lv1_0), i_reg_281.read()), ap_const_lv3_0);
}

void CNN::thread_tmp_31_mid2_cast_fu_482_p1() {
    tmp_31_mid2_cast_fu_482_p1 = esl_zext<64,15>(tmp_31_mid2_fu_476_p3.read());
}

void CNN::thread_tmp_31_mid2_fu_476_p3() {
    tmp_31_mid2_fu_476_p3 = (!exitcond_reg_793.read()[0].is_01())? sc_lv<15>(): ((exitcond_reg_793.read()[0].to_bool())? tmp_30_mid1_fu_470_p2.read(): tmp_41_reg_768.read());
}

void CNN::thread_tmp_32_mid1_fu_500_p5() {
    tmp_32_mid1_fu_500_p5 = esl_concat<5,3>(esl_concat<3,2>(esl_concat<2,1>(i_4_fu_441_p2.read(), ap_const_lv1_0), i_4_fu_441_p2.read()), ap_const_lv3_0);
}

void CNN::thread_tmp_32_mid2_fu_512_p3() {
    tmp_32_mid2_fu_512_p3 = (!exitcond_reg_793.read()[0].is_01())? sc_lv<8>(): ((exitcond_reg_793.read()[0].to_bool())? tmp_32_mid1_fu_500_p5.read(): tmp_31_reg_779.read());
}

void CNN::thread_tmp_33_fu_584_p2() {
    tmp_33_fu_584_p2 = (!tmp_42_cast_fu_570_p1.read().is_01() || !p_shl2_fu_576_p3.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_42_cast_fu_570_p1.read()) + sc_biguint<6>(p_shl2_fu_576_p3.read()));
}

void CNN::thread_tmp_34_fu_557_p2() {
    tmp_34_fu_557_p2 = (!tmp_42_cast6_fu_554_p1.read().is_01() || !p_shl1_mid2_reg_815.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_42_cast6_fu_554_p1.read()) + sc_biguint<5>(p_shl1_mid2_reg_815.read()));
}

void CNN::thread_tmp_35_fu_562_p1() {
    tmp_35_fu_562_p1 = esl_zext<64,5>(tmp_34_fu_557_p2.read());
}

void CNN::thread_tmp_38_fu_698_p2() {
    tmp_38_fu_698_p2 = (!tmp_49_cast_reg_921.read().is_01() || !p_shl3_fu_690_p3.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_49_cast_reg_921.read()) + sc_biguint<6>(p_shl3_fu_690_p3.read()));
}

void CNN::thread_tmp_39_fu_712_p2() {
    tmp_39_fu_712_p2 = (!tmp_49_cast2_reg_916.read().is_01() || !p_shl1_reg_773.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_49_cast2_reg_916.read()) + sc_biguint<5>(p_shl1_reg_773.read()));
}

void CNN::thread_tmp_40_fu_716_p1() {
    tmp_40_fu_716_p1 = esl_zext<64,5>(tmp_39_fu_712_p2.read());
}

void CNN::thread_tmp_41_fu_399_p1() {
    tmp_41_fu_399_p1 = tmp_s_fu_389_p2.read().range(15-1, 0);
}

void CNN::thread_tmp_42_cast6_fu_554_p1() {
    tmp_42_cast6_fu_554_p1 = esl_zext<5,4>(j_mid2_reg_803.read());
}

void CNN::thread_tmp_42_cast_fu_570_p1() {
    tmp_42_cast_fu_570_p1 = esl_zext<6,4>(j_mid2_reg_803.read());
}

void CNN::thread_tmp_42_fu_573_p1() {
    tmp_42_fu_573_p1 = j_mid2_reg_803.read().range(3-1, 0);
}

void CNN::thread_tmp_43_fu_686_p1() {
    tmp_43_fu_686_p1 = j_reg_293.read().range(3-1, 0);
}

void CNN::thread_tmp_44_cast_fu_590_p1() {
    tmp_44_cast_fu_590_p1 = esl_zext<8,6>(tmp_33_fu_584_p2.read());
}

void CNN::thread_tmp_49_cast2_fu_661_p1() {
    tmp_49_cast2_fu_661_p1 = esl_zext<5,4>(j_reg_293.read());
}

void CNN::thread_tmp_49_cast_fu_665_p1() {
    tmp_49_cast_fu_665_p1 = esl_zext<6,4>(j_reg_293.read());
}

void CNN::thread_tmp_53_cast_fu_703_p1() {
    tmp_53_cast_fu_703_p1 = esl_zext<8,6>(tmp_38_fu_698_p2.read());
}

void CNN::thread_tmp_fu_379_p2() {
    tmp_fu_379_p2 = (!i_reg_281.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_281.read() == ap_const_lv2_0);
}

void CNN::thread_tmp_i_fu_721_p1() {
    tmp_i_fu_721_p1 = esl_sext<64,8>(i_i_reg_352.read());
}

void CNN::thread_tmp_mid1_fu_454_p2() {
    tmp_mid1_fu_454_p2 = (!i_4_fu_441_p2.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(i_4_fu_441_p2.read() == ap_const_lv2_0);
}

void CNN::thread_tmp_mid2_fu_460_p3() {
    tmp_mid2_fu_460_p3 = (!exitcond_reg_793.read()[0].is_01())? sc_lv<1>(): ((exitcond_reg_793.read()[0].to_bool())? tmp_mid1_fu_454_p2.read(): tmp_reg_758.read());
}

void CNN::thread_tmp_s_fu_389_p1() {
    tmp_s_fu_389_p1 =  (sc_lv<2>) (tmp_s_fu_389_p10.read());
}

void CNN::thread_tmp_s_fu_389_p10() {
    tmp_s_fu_389_p10 = esl_zext<17,2>(i_reg_281.read());
}

void CNN::thread_tmp_s_fu_389_p2() {
    tmp_s_fu_389_p2 = (!ap_const_lv17_2710.is_01() || !tmp_s_fu_389_p1.read().is_01())? sc_lv<17>(): sc_biguint<17>(ap_const_lv17_2710) * sc_biguint<2>(tmp_s_fu_389_p1.read());
}

void CNN::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_flatten_fu_423_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_mid2_fu_460_p3.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_state3_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state25;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_block_state3_io.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_mid2_fu_460_p3.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_img_port_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 1024 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_537_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_537_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_img_port_AWREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_CONV_fu_363_ap_done.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 16384 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_609_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_609_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 524288 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && esl_seteq<1,1,1>(img_port_BVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state24;
            }
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            break;
        case 67108864 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_631_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_631_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state34;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            }
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 268435456 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_img_port_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state36;
            } else {
                ap_NS_fsm = ap_ST_fsm_state35;
            }
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            break;
        case 34359738368 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp3_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond4_fu_669_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp3_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp3_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, exitcond4_fu_669_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp3_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state45;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            }
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state46;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state47;
            break;
        case 274877906944 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && esl_seteq<1,1,1>(grp_CONV_fu_363_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state48;
            } else {
                ap_NS_fsm = ap_ST_fsm_state47;
            }
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state49;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state48;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<41>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void CNN::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_AWVALID\" :  \"" << m_axi_img_port_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_img_port_AWREADY\" :  \"" << m_axi_img_port_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_AWADDR\" :  \"" << m_axi_img_port_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_AWID\" :  \"" << m_axi_img_port_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_AWLEN\" :  \"" << m_axi_img_port_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_AWSIZE\" :  \"" << m_axi_img_port_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_AWBURST\" :  \"" << m_axi_img_port_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_AWLOCK\" :  \"" << m_axi_img_port_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_AWCACHE\" :  \"" << m_axi_img_port_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_AWPROT\" :  \"" << m_axi_img_port_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_AWQOS\" :  \"" << m_axi_img_port_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_AWREGION\" :  \"" << m_axi_img_port_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_AWUSER\" :  \"" << m_axi_img_port_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_WVALID\" :  \"" << m_axi_img_port_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_img_port_WREADY\" :  \"" << m_axi_img_port_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_WDATA\" :  \"" << m_axi_img_port_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_WSTRB\" :  \"" << m_axi_img_port_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_WLAST\" :  \"" << m_axi_img_port_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_WID\" :  \"" << m_axi_img_port_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_WUSER\" :  \"" << m_axi_img_port_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_ARVALID\" :  \"" << m_axi_img_port_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_img_port_ARREADY\" :  \"" << m_axi_img_port_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_ARADDR\" :  \"" << m_axi_img_port_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_ARID\" :  \"" << m_axi_img_port_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_ARLEN\" :  \"" << m_axi_img_port_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_ARSIZE\" :  \"" << m_axi_img_port_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_ARBURST\" :  \"" << m_axi_img_port_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_ARLOCK\" :  \"" << m_axi_img_port_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_ARCACHE\" :  \"" << m_axi_img_port_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_ARPROT\" :  \"" << m_axi_img_port_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_ARQOS\" :  \"" << m_axi_img_port_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_ARREGION\" :  \"" << m_axi_img_port_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_ARUSER\" :  \"" << m_axi_img_port_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_img_port_RVALID\" :  \"" << m_axi_img_port_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_RREADY\" :  \"" << m_axi_img_port_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_img_port_RDATA\" :  \"" << m_axi_img_port_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_img_port_RLAST\" :  \"" << m_axi_img_port_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_img_port_RID\" :  \"" << m_axi_img_port_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_img_port_RUSER\" :  \"" << m_axi_img_port_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_img_port_RRESP\" :  \"" << m_axi_img_port_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_img_port_BVALID\" :  \"" << m_axi_img_port_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_img_port_BREADY\" :  \"" << m_axi_img_port_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_img_port_BRESP\" :  \"" << m_axi_img_port_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_img_port_BID\" :  \"" << m_axi_img_port_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_img_port_BUSER\" :  \"" << m_axi_img_port_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_address0\" :  \"" << kernel_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_ce0\" :  \"" << kernel_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_q0\" :  \"" << kernel_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bias_address0\" :  \"" << bias_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bias_ce0\" :  \"" << bias_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"bias_q0\" :  \"" << bias_q0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

