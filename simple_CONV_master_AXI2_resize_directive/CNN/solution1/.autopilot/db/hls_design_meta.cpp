#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("m_axi_img_port_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_img_port_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_img_port_AWADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_img_port_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_img_port_AWLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_img_port_AWSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_img_port_AWBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_img_port_AWLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_img_port_AWCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_img_port_AWPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_img_port_AWQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_img_port_AWREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_img_port_AWUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_img_port_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_img_port_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_img_port_WDATA", 32, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_img_port_WSTRB", 4, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_img_port_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_img_port_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_img_port_WUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_img_port_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_img_port_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_img_port_ARADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_img_port_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_img_port_ARLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_img_port_ARSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_img_port_ARBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_img_port_ARLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_img_port_ARCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_img_port_ARPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_img_port_ARQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_img_port_ARREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_img_port_ARUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_img_port_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_img_port_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_img_port_RDATA", 32, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_img_port_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_img_port_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_img_port_RUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_img_port_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_img_port_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_img_port_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_img_port_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_img_port_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_img_port_BUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("kernel_address0", 5, hls_out, 1, "ap_memory", "mem_address", 1),
	Port_Property("kernel_ce0", 1, hls_out, 1, "ap_memory", "mem_ce", 1),
	Port_Property("kernel_q0", 8, hls_in, 1, "ap_memory", "mem_dout", 1),
	Port_Property("bias_address0", 3, hls_out, 2, "ap_memory", "mem_address", 1),
	Port_Property("bias_ce0", 1, hls_out, 2, "ap_memory", "mem_ce", 1),
	Port_Property("bias_q0", 8, hls_in, 2, "ap_memory", "mem_dout", 1),
};
const char* HLS_Design_Meta::dut_name = "CNN";
