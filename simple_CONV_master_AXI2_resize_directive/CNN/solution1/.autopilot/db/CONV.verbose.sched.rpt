

================================================================
== Vivado HLS Report for 'CONV'
================================================================
* Date:           Tue Apr  2 18:08:07 2019

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        CNN
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.321|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+--------+--------+--------+---------+
    |     Latency     |     Interval    | Pipeline|
    |   min  |   max  |   min  |   max  |   Type  |
    +--------+--------+--------+--------+---------+
    |  106062|  106062|  106062|  106062|   none  |
    +--------+--------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-------+-------+----------+-----------+-----------+-------+----------+
        |          |    Latency    | Iteration|  Initiation Interval  |  Trip |          |
        | Loop Name|  min  |  max  |  Latency |  achieved |   target  | Count | Pipelined|
        +----------+-------+-------+----------+-----------+-----------+-------+----------+
        |- Loop 1  |  10001|  10001|         3|          1|          1|  10000|    yes   |
        |- Loop 2  |      9|      9|         2|          1|          1|      9|    yes   |
        |- Loop 3  |  86439|  86439|         5|          1|          1|  86436|    yes   |
        |- Loop 4  |   9605|   9605|         3|          1|          1|   9604|    yes   |
        +----------+-------+-------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3
  * Pipeline-1: initiation interval (II) = 1, depth = 2
  * Pipeline-2: initiation interval (II) = 1, depth = 5
  * Pipeline-3: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 18
* Pipeline : 4
  Pipeline-0 : II = 1, D = 3, States = { 2 3 4 }
  Pipeline-1 : II = 1, D = 2, States = { 6 7 }
  Pipeline-2 : II = 1, D = 5, States = { 9 10 11 12 13 }
  Pipeline-3 : II = 1, D = 3, States = { 15 16 17 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	5  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	4  / true
4 --> 
	2  / true
5 --> 
	6  / true
6 --> 
	8  / (exitcond_flatten8)
	7  / (!exitcond_flatten8)
7 --> 
	6  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	14  / (exitcond_flatten3)
	11  / (!exitcond_flatten3)
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	9  / true
14 --> 
	15  / true
15 --> 
	18  / (exitcond)
	16  / (!exitcond)
16 --> 
	17  / true
17 --> 
	15  / true
18 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.46>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([10000 x i8]* %input_img, [1 x i8]* @p_str, [12 x i8]* @p_str9, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 19 'specmemcore' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%bias_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %bias)"   --->   Operation 20 'read' 'bias_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%kernel_offset_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %kernel_offset)"   --->   Operation 21 'read' 'kernel_offset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%IBRAM = alloca [10000 x i8], align 1" [source/CNN.cpp:17]   --->   Operation 22 'alloca' 'IBRAM' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9604> <RAM>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%OBRAM = alloca [9604 x i8], align 16" [source/CNN.cpp:18]   --->   Operation 23 'alloca' 'OBRAM' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9604> <RAM>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%WBRAM = alloca [9 x i8], align 1" [source/CNN.cpp:20]   --->   Operation 24 'alloca' 'WBRAM' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9604> <RAM>
ST_1 : Operation 25 [1/1] (0.46ns)   --->   "br label %.preheader14" [source/CNN.cpp:28]   --->   Operation 25 'br' <Predicate = true> <Delay = 0.46>

State 2 <SV = 1> <Delay = 3.18>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i14 [ 0, %0 ], [ %indvar_flatten_next, %.preheader14.preheader ]"   --->   Operation 26 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%i = phi i7 [ 0, %0 ], [ %tmp_3_mid2_v_v, %.preheader14.preheader ]" [source/CNN.cpp:31]   --->   Operation 27 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%j = phi i7 [ 0, %0 ], [ %j_2, %.preheader14.preheader ]"   --->   Operation 28 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (1.98ns)   --->   "%exitcond_flatten = icmp eq i14 %indvar_flatten, -6384"   --->   Operation 29 'icmp' 'exitcond_flatten' <Predicate = true> <Delay = 1.98> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (1.52ns)   --->   "%indvar_flatten_next = add i14 %indvar_flatten, 1"   --->   Operation 30 'add' 'indvar_flatten_next' <Predicate = true> <Delay = 1.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "br i1 %exitcond_flatten, label %.preheader13.preheader, label %.preheader14.preheader"   --->   Operation 31 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (1.31ns)   --->   "%i_2 = add i7 %i, 1" [source/CNN.cpp:28]   --->   Operation 32 'add' 'i_2' <Predicate = (!exitcond_flatten)> <Delay = 1.31> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (1.06ns)   --->   "%exitcond1 = icmp eq i7 %j, -28" [source/CNN.cpp:29]   --->   Operation 33 'icmp' 'exitcond1' <Predicate = (!exitcond_flatten)> <Delay = 1.06> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.80ns)   --->   "%j_mid2 = select i1 %exitcond1, i7 0, i7 %j" [source/CNN.cpp:29]   --->   Operation 34 'select' 'j_mid2' <Predicate = (!exitcond_flatten)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.80ns)   --->   "%tmp_3_mid2_v_v = select i1 %exitcond1, i7 %i_2, i7 %i" [source/CNN.cpp:31]   --->   Operation 35 'select' 'tmp_3_mid2_v_v' <Predicate = (!exitcond_flatten)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (1.31ns)   --->   "%j_2 = add i7 %j_mid2, 1" [source/CNN.cpp:29]   --->   Operation 36 'add' 'j_2' <Predicate = (!exitcond_flatten)> <Delay = 1.31> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 8.32>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%tmp_3_mid2_v = zext i7 %tmp_3_mid2_v_v to i14" [source/CNN.cpp:31]   --->   Operation 37 'zext' 'tmp_3_mid2_v' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (2.82ns) (grouped into DSP with root node tmp_s)   --->   "%tmp_3_mid2 = mul i14 %tmp_3_mid2_v, 100" [source/CNN.cpp:31]   --->   Operation 38 'mul' 'tmp_3_mid2' <Predicate = (!exitcond_flatten)> <Delay = 2.82> <Core = "DSP48">   --->   Core 65 'DSP48' <Latency = 0> <II = 1> <Delay = 5.55> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%tmp_4_mid2_cast = zext i7 %tmp_3_mid2_v_v to i14" [source/CNN.cpp:31]   --->   Operation 39 'zext' 'tmp_4_mid2_cast' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (2.82ns) (grouped into DSP with root node tmp_4)   --->   "%tmp_3 = mul i14 %tmp_4_mid2_cast, 100" [source/CNN.cpp:31]   --->   Operation 40 'mul' 'tmp_3' <Predicate = (!exitcond_flatten)> <Delay = 2.82> <Core = "DSP48">   --->   Core 65 'DSP48' <Latency = 0> <II = 1> <Delay = 5.55> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%tmp_9_cast = zext i7 %j_mid2 to i14" [source/CNN.cpp:31]   --->   Operation 41 'zext' 'tmp_9_cast' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (2.73ns) (root node of the DSP)   --->   "%tmp_s = add i14 %tmp_9_cast, %tmp_3_mid2" [source/CNN.cpp:31]   --->   Operation 42 'add' 'tmp_s' <Predicate = (!exitcond_flatten)> <Delay = 2.73> <Core = "DSP48">   --->   Core 65 'DSP48' <Latency = 0> <II = 1> <Delay = 5.55> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%tmp_1 = zext i14 %tmp_s to i64" [source/CNN.cpp:31]   --->   Operation 43 'zext' 'tmp_1' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%input_img_addr = getelementptr [10000 x i8]* %input_img, i64 0, i64 %tmp_1" [source/CNN.cpp:31]   --->   Operation 44 'getelementptr' 'input_img_addr' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_3 : Operation 45 [2/2] (2.77ns)   --->   "%input_img_load = load i8* %input_img_addr, align 1" [source/CNN.cpp:31]   --->   Operation 45 'load' 'input_img_load' <Predicate = (!exitcond_flatten)> <Delay = 2.77> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 10000> <RAM>
ST_3 : Operation 46 [1/1] (2.73ns) (root node of the DSP)   --->   "%tmp_4 = add i14 %tmp_3, %tmp_9_cast" [source/CNN.cpp:31]   --->   Operation 46 'add' 'tmp_4' <Predicate = (!exitcond_flatten)> <Delay = 2.73> <Core = "DSP48">   --->   Core 65 'DSP48' <Latency = 0> <II = 1> <Delay = 5.55> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 4 <SV = 3> <Delay = 5.54>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%tmp_5 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str1)" [source/CNN.cpp:29]   --->   Operation 47 'specregionbegin' 'tmp_5' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind" [source/CNN.cpp:30]   --->   Operation 48 'specpipeline' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_4 : Operation 49 [1/2] (2.77ns)   --->   "%input_img_load = load i8* %input_img_addr, align 1" [source/CNN.cpp:31]   --->   Operation 49 'load' 'input_img_load' <Predicate = (!exitcond_flatten)> <Delay = 2.77> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 10000> <RAM>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_4_cast = zext i14 %tmp_4 to i64" [source/CNN.cpp:31]   --->   Operation 50 'zext' 'tmp_4_cast' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%IBRAM_addr = getelementptr [10000 x i8]* %IBRAM, i64 0, i64 %tmp_4_cast" [source/CNN.cpp:31]   --->   Operation 51 'getelementptr' 'IBRAM_addr' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (2.77ns)   --->   "store i8 %input_img_load, i8* %IBRAM_addr, align 1" [source/CNN.cpp:31]   --->   Operation 52 'store' <Predicate = (!exitcond_flatten)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9604> <RAM>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str1, i32 %tmp_5)" [source/CNN.cpp:32]   --->   Operation 53 'specregionend' 'empty' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "br label %.preheader14" [source/CNN.cpp:29]   --->   Operation 54 'br' <Predicate = (!exitcond_flatten)> <Delay = 0.00>

State 5 <SV = 2> <Delay = 0.46>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "%tmp = trunc i8 %kernel_offset_read to i6" [source/CNN.cpp:40]   --->   Operation 55 'trunc' 'tmp' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (0.46ns)   --->   "br label %.preheader12" [source/CNN.cpp:37]   --->   Operation 56 'br' <Predicate = true> <Delay = 0.46>

State 6 <SV = 3> <Delay = 5.68>
ST_6 : Operation 57 [1/1] (0.00ns)   --->   "%indvar_flatten6 = phi i4 [ 0, %.preheader13.preheader ], [ %indvar_flatten_next7, %.preheader13 ]"   --->   Operation 57 'phi' 'indvar_flatten6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 58 [1/1] (0.00ns)   --->   "%m = phi i2 [ 0, %.preheader13.preheader ], [ %tmp_7_mid2_v, %.preheader13 ]" [source/CNN.cpp:40]   --->   Operation 58 'phi' 'm' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 59 [1/1] (0.00ns)   --->   "%n = phi i2 [ 0, %.preheader13.preheader ], [ %n_2, %.preheader13 ]"   --->   Operation 59 'phi' 'n' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 60 [1/1] (0.00ns)   --->   "%tmp_5_cast7 = zext i2 %m to i5" [source/CNN.cpp:40]   --->   Operation 60 'zext' 'tmp_5_cast7' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 61 [1/1] (0.00ns)   --->   "%p_shl = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %m, i2 0)" [source/CNN.cpp:40]   --->   Operation 61 'bitconcatenate' 'p_shl' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 62 [1/1] (0.00ns)   --->   "%p_shl_cast = zext i4 %p_shl to i5" [source/CNN.cpp:40]   --->   Operation 62 'zext' 'p_shl_cast' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 63 [1/1] (0.99ns)   --->   "%tmp_6 = sub i5 %p_shl_cast, %tmp_5_cast7" [source/CNN.cpp:40]   --->   Operation 63 'sub' 'tmp_6' <Predicate = true> <Delay = 0.99> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 64 [1/1] (0.96ns)   --->   "%exitcond_flatten8 = icmp eq i4 %indvar_flatten6, -7"   --->   Operation 64 'icmp' 'exitcond_flatten8' <Predicate = true> <Delay = 0.96> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 65 [1/1] (0.99ns)   --->   "%indvar_flatten_next7 = add i4 %indvar_flatten6, 1"   --->   Operation 65 'add' 'indvar_flatten_next7' <Predicate = true> <Delay = 0.99> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 66 [1/1] (0.00ns)   --->   "br i1 %exitcond_flatten8, label %.preheader9.preheader, label %.preheader13"   --->   Operation 66 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 67 [1/1] (0.63ns)   --->   "%m_2 = add i2 %m, 1" [source/CNN.cpp:37]   --->   Operation 67 'add' 'm_2' <Predicate = (!exitcond_flatten8)> <Delay = 0.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 68 [1/1] (0.50ns)   --->   "%exitcond2 = icmp eq i2 %n, -1" [source/CNN.cpp:38]   --->   Operation 68 'icmp' 'exitcond2' <Predicate = (!exitcond_flatten8)> <Delay = 0.50> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 69 [1/1] (0.81ns)   --->   "%n_mid2 = select i1 %exitcond2, i2 0, i2 %n" [source/CNN.cpp:38]   --->   Operation 69 'select' 'n_mid2' <Predicate = (!exitcond_flatten8)> <Delay = 0.81> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 70 [1/1] (0.00ns)   --->   "%tmp_5_cast7_mid1 = zext i2 %m_2 to i5" [source/CNN.cpp:40]   --->   Operation 70 'zext' 'tmp_5_cast7_mid1' <Predicate = (!exitcond_flatten8)> <Delay = 0.00>
ST_6 : Operation 71 [1/1] (0.00ns)   --->   "%p_shl_mid1 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %m_2, i2 0)" [source/CNN.cpp:40]   --->   Operation 71 'bitconcatenate' 'p_shl_mid1' <Predicate = (!exitcond_flatten8)> <Delay = 0.00>
ST_6 : Operation 72 [1/1] (0.00ns)   --->   "%p_shl_cast_mid1 = zext i4 %p_shl_mid1 to i5" [source/CNN.cpp:40]   --->   Operation 72 'zext' 'p_shl_cast_mid1' <Predicate = (!exitcond_flatten8)> <Delay = 0.00>
ST_6 : Operation 73 [1/1] (0.99ns)   --->   "%tmp_6_mid1 = sub i5 %p_shl_cast_mid1, %tmp_5_cast7_mid1" [source/CNN.cpp:40]   --->   Operation 73 'sub' 'tmp_6_mid1' <Predicate = (!exitcond_flatten8)> <Delay = 0.99> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node tmp_8)   --->   "%tmp_6_mid2 = select i1 %exitcond2, i5 %tmp_6_mid1, i5 %tmp_6" [source/CNN.cpp:40]   --->   Operation 74 'select' 'tmp_6_mid2' <Predicate = (!exitcond_flatten8)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 75 [1/1] (0.81ns)   --->   "%tmp_7_mid2_v = select i1 %exitcond2, i2 %m_2, i2 %m" [source/CNN.cpp:40]   --->   Operation 75 'select' 'tmp_7_mid2_v' <Predicate = (!exitcond_flatten8)> <Delay = 0.81> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 76 [1/1] (0.00ns)   --->   "%tmp_11_cast = zext i2 %n_mid2 to i5" [source/CNN.cpp:40]   --->   Operation 76 'zext' 'tmp_11_cast' <Predicate = (!exitcond_flatten8)> <Delay = 0.00>
ST_6 : Operation 77 [1/1] (1.02ns) (out node of the LUT)   --->   "%tmp_8 = add i5 %tmp_11_cast, %tmp_6_mid2" [source/CNN.cpp:40]   --->   Operation 77 'add' 'tmp_8' <Predicate = (!exitcond_flatten8)> <Delay = 1.02> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 78 [1/1] (0.00ns)   --->   "%tmp_13_cast = sext i5 %tmp_8 to i6" [source/CNN.cpp:40]   --->   Operation 78 'sext' 'tmp_13_cast' <Predicate = (!exitcond_flatten8)> <Delay = 0.00>
ST_6 : Operation 79 [1/1] (1.28ns)   --->   "%sum = add i6 %tmp, %tmp_13_cast" [source/CNN.cpp:40]   --->   Operation 79 'add' 'sum' <Predicate = (!exitcond_flatten8)> <Delay = 1.28> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 80 [1/1] (0.00ns)   --->   "%sum_cast = zext i6 %sum to i64" [source/CNN.cpp:40]   --->   Operation 80 'zext' 'sum_cast' <Predicate = (!exitcond_flatten8)> <Delay = 0.00>
ST_6 : Operation 81 [1/1] (0.00ns)   --->   "%kernel_addr = getelementptr [27 x i8]* %kernel, i64 0, i64 %sum_cast" [source/CNN.cpp:40]   --->   Operation 81 'getelementptr' 'kernel_addr' <Predicate = (!exitcond_flatten8)> <Delay = 0.00>
ST_6 : Operation 82 [2/2] (1.75ns)   --->   "%kernel_load = load i8* %kernel_addr, align 1" [source/CNN.cpp:40]   --->   Operation 82 'load' 'kernel_load' <Predicate = (!exitcond_flatten8)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9604> <RAM>
ST_6 : Operation 83 [1/1] (0.63ns)   --->   "%n_2 = add i2 %n_mid2, 1" [source/CNN.cpp:38]   --->   Operation 83 'add' 'n_2' <Predicate = (!exitcond_flatten8)> <Delay = 0.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 4> <Delay = 4.54>
ST_7 : Operation 84 [1/1] (0.00ns)   --->   "%tmp_7_mid2_cast = zext i2 %tmp_7_mid2_v to i5" [source/CNN.cpp:40]   --->   Operation 84 'zext' 'tmp_7_mid2_cast' <Predicate = (!exitcond_flatten8)> <Delay = 0.00>
ST_7 : Operation 85 [1/1] (0.00ns)   --->   "%tmp_7 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %tmp_7_mid2_v, i2 0)" [source/CNN.cpp:40]   --->   Operation 85 'bitconcatenate' 'tmp_7' <Predicate = (!exitcond_flatten8)> <Delay = 0.00>
ST_7 : Operation 86 [1/1] (0.00ns)   --->   "%p_shl1_cast = zext i4 %tmp_7 to i5" [source/CNN.cpp:40]   --->   Operation 86 'zext' 'p_shl1_cast' <Predicate = (!exitcond_flatten8)> <Delay = 0.00>
ST_7 : Operation 87 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp_2 = sub i5 %p_shl1_cast, %tmp_7_mid2_cast" [source/CNN.cpp:40]   --->   Operation 87 'sub' 'tmp_2' <Predicate = (!exitcond_flatten8)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.39> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 88 [1/1] (0.00ns)   --->   "%tmp_9 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str2)" [source/CNN.cpp:38]   --->   Operation 88 'specregionbegin' 'tmp_9' <Predicate = (!exitcond_flatten8)> <Delay = 0.00>
ST_7 : Operation 89 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind" [source/CNN.cpp:39]   --->   Operation 89 'specpipeline' <Predicate = (!exitcond_flatten8)> <Delay = 0.00>
ST_7 : Operation 90 [1/2] (1.75ns)   --->   "%kernel_load = load i8* %kernel_addr, align 1" [source/CNN.cpp:40]   --->   Operation 90 'load' 'kernel_load' <Predicate = (!exitcond_flatten8)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9604> <RAM>
ST_7 : Operation 91 [1/1] (2.79ns) (root node of TernaryAdder)   --->   "%tmp_10 = add i5 %tmp_2, %tmp_11_cast" [source/CNN.cpp:40]   --->   Operation 91 'add' 'tmp_10' <Predicate = (!exitcond_flatten8)> <Delay = 2.79> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.39> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 92 [1/1] (0.00ns)   --->   "%tmp_30_cast = sext i5 %tmp_10 to i64" [source/CNN.cpp:40]   --->   Operation 92 'sext' 'tmp_30_cast' <Predicate = (!exitcond_flatten8)> <Delay = 0.00>
ST_7 : Operation 93 [1/1] (0.00ns)   --->   "%WBRAM_addr = getelementptr [9 x i8]* %WBRAM, i64 0, i64 %tmp_30_cast" [source/CNN.cpp:40]   --->   Operation 93 'getelementptr' 'WBRAM_addr' <Predicate = (!exitcond_flatten8)> <Delay = 0.00>
ST_7 : Operation 94 [1/1] (1.75ns)   --->   "store i8 %kernel_load, i8* %WBRAM_addr, align 1" [source/CNN.cpp:40]   --->   Operation 94 'store' <Predicate = (!exitcond_flatten8)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9604> <RAM>
ST_7 : Operation 95 [1/1] (0.00ns)   --->   "%empty_26 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str2, i32 %tmp_9)" [source/CNN.cpp:41]   --->   Operation 95 'specregionend' 'empty_26' <Predicate = (!exitcond_flatten8)> <Delay = 0.00>
ST_7 : Operation 96 [1/1] (0.00ns)   --->   "br label %.preheader12" [source/CNN.cpp:38]   --->   Operation 96 'br' <Predicate = (!exitcond_flatten8)> <Delay = 0.00>

State 8 <SV = 4> <Delay = 0.46>
ST_8 : Operation 97 [1/1] (0.46ns)   --->   "br label %.preheader9" [source/CNN.cpp:55]   --->   Operation 97 'br' <Predicate = true> <Delay = 0.46>

State 9 <SV = 5> <Delay = 5.86>
ST_9 : Operation 98 [1/1] (0.00ns)   --->   "%indvar_flatten1 = phi i17 [ %indvar_flatten_next3, %.loopexit ], [ 0, %.preheader9.preheader ]"   --->   Operation 98 'phi' 'indvar_flatten1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 99 [1/1] (0.00ns)   --->   "%indvar_flatten2 = phi i16 [ %indvar_flatten_next2, %.loopexit ], [ 0, %.preheader9.preheader ]"   --->   Operation 99 'phi' 'indvar_flatten2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 100 [1/1] (0.00ns)   --->   "%indvar_flatten3 = phi i14 [ %indvar_flatten_next1, %.loopexit ], [ 0, %.preheader9.preheader ]" [source/CNN.cpp:52]   --->   Operation 100 'phi' 'indvar_flatten3' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 101 [1/1] (0.00ns)   --->   "%j_1 = phi i7 [ %j_3, %.loopexit ], [ 0, %.preheader9.preheader ]"   --->   Operation 101 'phi' 'j_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 102 [1/1] (2.11ns)   --->   "%exitcond_flatten3 = icmp eq i17 %indvar_flatten1, -44636"   --->   Operation 102 'icmp' 'exitcond_flatten3' <Predicate = true> <Delay = 2.11> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 103 [1/1] (1.55ns)   --->   "%indvar_flatten_next3 = add i17 %indvar_flatten1, 1"   --->   Operation 103 'add' 'indvar_flatten_next3' <Predicate = true> <Delay = 1.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 104 [1/1] (2.13ns)   --->   "%exitcond_flatten1 = icmp eq i16 %indvar_flatten2, 28812"   --->   Operation 104 'icmp' 'exitcond_flatten1' <Predicate = (!exitcond_flatten3)> <Delay = 2.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 105 [1/1] (0.80ns)   --->   "%not_exitcond_flatten = xor i1 %exitcond_flatten1, true" [source/CNN.cpp:52]   --->   Operation 105 'xor' 'not_exitcond_flatten' <Predicate = (!exitcond_flatten3)> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 106 [1/1] (1.06ns)   --->   "%exitcond3 = icmp eq i7 %j_1, -30" [source/CNN.cpp:52]   --->   Operation 106 'icmp' 'exitcond3' <Predicate = (!exitcond_flatten3)> <Delay = 1.06> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node exitcond1_mid1)   --->   "%exitcond1_mid = and i1 %exitcond3, %not_exitcond_flatten" [source/CNN.cpp:52]   --->   Operation 107 'and' 'exitcond1_mid' <Predicate = (!exitcond_flatten3)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 108 [1/1] (1.98ns)   --->   "%exitcond_flatten2 = icmp eq i14 %indvar_flatten3, -6780" [source/CNN.cpp:52]   --->   Operation 108 'icmp' 'exitcond_flatten2' <Predicate = (!exitcond_flatten3)> <Delay = 1.98> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 109 [1/1] (0.80ns)   --->   "%exitcond_flatten15_m = and i1 %exitcond_flatten2, %not_exitcond_flatten" [source/CNN.cpp:52]   --->   Operation 109 'and' 'exitcond_flatten15_m' <Predicate = (!exitcond_flatten3)> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 110 [1/1] (0.80ns)   --->   "%tmp_32 = or i1 %exitcond_flatten15_m, %exitcond_flatten1" [source/CNN.cpp:52]   --->   Operation 110 'or' 'tmp_32' <Predicate = (!exitcond_flatten3)> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node exitcond1_mid1)   --->   "%exitcond_flatten15_n = xor i1 %exitcond_flatten2, true" [source/CNN.cpp:52]   --->   Operation 111 'xor' 'exitcond_flatten15_n' <Predicate = (!exitcond_flatten3)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 112 [1/1] (0.00ns) (grouped into LUT with out node exitcond1_mid1)   --->   "%not_exitcond_flatten_1 = or i1 %exitcond_flatten1, %exitcond_flatten15_n" [source/CNN.cpp:52]   --->   Operation 112 'or' 'not_exitcond_flatten_1' <Predicate = (!exitcond_flatten3)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 113 [1/1] (0.80ns) (out node of the LUT)   --->   "%exitcond1_mid1 = and i1 %exitcond1_mid, %not_exitcond_flatten_1" [source/CNN.cpp:52]   --->   Operation 113 'and' 'exitcond1_mid1' <Predicate = (!exitcond_flatten3)> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 114 [1/1] (0.00ns) (grouped into LUT with out node j_1_mid2)   --->   "%tmp_34 = or i1 %exitcond1_mid1, %exitcond_flatten15_m" [source/CNN.cpp:52]   --->   Operation 114 'or' 'tmp_34' <Predicate = (!exitcond_flatten3)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node j_1_mid2)   --->   "%tmp_35 = or i1 %tmp_34, %exitcond_flatten1" [source/CNN.cpp:52]   --->   Operation 115 'or' 'tmp_35' <Predicate = (!exitcond_flatten3)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 116 [1/1] (0.80ns) (out node of the LUT)   --->   "%j_1_mid2 = select i1 %tmp_35, i7 0, i7 %j_1" [source/CNN.cpp:52]   --->   Operation 116 'select' 'j_1_mid2' <Predicate = (!exitcond_flatten3)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 117 [1/1] (1.31ns)   --->   "%j_3 = add i7 %j_1_mid2, 1" [source/CNN.cpp:52]   --->   Operation 117 'add' 'j_3' <Predicate = (!exitcond_flatten3)> <Delay = 1.31> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 118 [1/1] (1.52ns)   --->   "%indvar_flatten13_op = add i14 %indvar_flatten3, 1" [source/CNN.cpp:52]   --->   Operation 118 'add' 'indvar_flatten13_op' <Predicate = (!exitcond_flatten3)> <Delay = 1.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 119 [1/1] (0.58ns)   --->   "%indvar_flatten_next1 = select i1 %tmp_32, i14 1, i14 %indvar_flatten13_op" [source/CNN.cpp:52]   --->   Operation 119 'select' 'indvar_flatten_next1' <Predicate = (!exitcond_flatten3)> <Delay = 0.58> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 120 [1/1] (1.54ns)   --->   "%indvar_flatten34_op = add i16 %indvar_flatten2, 1"   --->   Operation 120 'add' 'indvar_flatten34_op' <Predicate = (!exitcond_flatten3)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 121 [1/1] (0.62ns)   --->   "%indvar_flatten_next2 = select i1 %exitcond_flatten1, i16 1, i16 %indvar_flatten34_op"   --->   Operation 121 'select' 'indvar_flatten_next2' <Predicate = (!exitcond_flatten3)> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 10 <SV = 6> <Delay = 7.26>
ST_10 : Operation 122 [1/1] (0.00ns)   --->   "%m_1 = phi i2 [ %tmp_8_cast_mid2, %.loopexit ], [ 0, %.preheader9.preheader ]" [source/CNN.cpp:55]   --->   Operation 122 'phi' 'm_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 123 [1/1] (0.00ns)   --->   "%n_1 = phi i2 [ %tmp_17_cast_mid2, %.loopexit ], [ 0, %.preheader9.preheader ]" [source/CNN.cpp:55]   --->   Operation 123 'phi' 'n_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 124 [1/1] (0.00ns)   --->   "%i_1 = phi i7 [ %i_1_mid2, %.loopexit ], [ 0, %.preheader9.preheader ]" [source/CNN.cpp:52]   --->   Operation 124 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 125 [1/1] (0.00ns)   --->   "%tmp_8_cast = zext i2 %m_1 to i7" [source/CNN.cpp:55]   --->   Operation 125 'zext' 'tmp_8_cast' <Predicate = (!exitcond_flatten1 & !exitcond_flatten15_m & !exitcond1_mid1)> <Delay = 0.00>
ST_10 : Operation 126 [1/1] (0.00ns)   --->   "%tmp_8_cast1 = zext i2 %m_1 to i5" [source/CNN.cpp:55]   --->   Operation 126 'zext' 'tmp_8_cast1' <Predicate = (!exitcond_flatten1 & !exitcond_flatten15_m)> <Delay = 0.00>
ST_10 : Operation 127 [1/1] (0.00ns)   --->   "%tmp_11 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %m_1, i2 0)" [source/CNN.cpp:55]   --->   Operation 127 'bitconcatenate' 'tmp_11' <Predicate = (!exitcond_flatten1 & !exitcond_flatten15_m)> <Delay = 0.00>
ST_10 : Operation 128 [1/1] (0.00ns)   --->   "%p_shl2_cast = zext i4 %tmp_11 to i5" [source/CNN.cpp:55]   --->   Operation 128 'zext' 'p_shl2_cast' <Predicate = (!exitcond_flatten1 & !exitcond_flatten15_m)> <Delay = 0.00>
ST_10 : Operation 129 [1/1] (0.99ns)   --->   "%tmp_14 = sub i5 %p_shl2_cast, %tmp_8_cast1" [source/CNN.cpp:55]   --->   Operation 129 'sub' 'tmp_14' <Predicate = (!exitcond_flatten1 & !exitcond_flatten15_m)> <Delay = 0.99> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 130 [1/1] (0.00ns)   --->   "%tmp_32_cast = sext i5 %tmp_14 to i6" [source/CNN.cpp:55]   --->   Operation 130 'sext' 'tmp_32_cast' <Predicate = (!exitcond_flatten1 & !exitcond_flatten15_m)> <Delay = 0.00>
ST_10 : Operation 131 [1/1] (0.00ns)   --->   "%tmp_16_cast = zext i2 %n_1 to i6" [source/CNN.cpp:55]   --->   Operation 131 'zext' 'tmp_16_cast' <Predicate = (!exitcond_flatten1 & !exitcond_flatten15_m)> <Delay = 0.00>
ST_10 : Operation 132 [1/1] (1.02ns)   --->   "%tmp_16 = add i6 %tmp_32_cast, %tmp_16_cast" [source/CNN.cpp:55]   --->   Operation 132 'add' 'tmp_16' <Predicate = (!exitcond_flatten1 & !exitcond_flatten15_m)> <Delay = 1.02> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 133 [1/1] (0.00ns) (grouped into LUT with out node tmp_18)   --->   "%tmp_17 = or i2 %n_1, %m_1" [source/CNN.cpp:56]   --->   Operation 133 'or' 'tmp_17' <Predicate = (!exitcond_flatten1 & !exitcond_flatten15_m)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 134 [1/1] (0.80ns) (out node of the LUT)   --->   "%tmp_18 = icmp eq i2 %tmp_17, 0" [source/CNN.cpp:56]   --->   Operation 134 'icmp' 'tmp_18' <Predicate = (!exitcond_flatten1 & !exitcond_flatten15_m)> <Delay = 0.80> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 135 [1/1] (0.00ns)   --->   "%tmp_22_cast3 = zext i7 %i_1 to i14" [source/CNN.cpp:57]   --->   Operation 135 'zext' 'tmp_22_cast3' <Predicate = (!tmp_32 & !exitcond1_mid1)> <Delay = 0.00>
ST_10 : Operation 136 [1/1] (1.31ns)   --->   "%tmp_19 = add i7 %i_1, %tmp_8_cast" [source/CNN.cpp:54]   --->   Operation 136 'add' 'tmp_19' <Predicate = (!exitcond_flatten1 & !exitcond_flatten15_m & !exitcond1_mid1)> <Delay = 1.31> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 137 [1/1] (3.61ns)   --->   "%tmp_20 = mul i14 %tmp_22_cast3, 98" [source/CNN.cpp:57]   --->   Operation 137 'mul' 'tmp_20' <Predicate = (!tmp_32 & !exitcond1_mid1)> <Delay = 3.61> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.61> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 138 [1/1] (0.00ns)   --->   "br i1 %exitcond_flatten3, label %.preheader.preheader, label %.loopexit"   --->   Operation 138 'br' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 139 [1/1] (0.63ns)   --->   "%m_3 = add i2 %m_1, 1" [source/CNN.cpp:49]   --->   Operation 139 'add' 'm_3' <Predicate = (!exitcond_flatten3)> <Delay = 0.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 140 [1/1] (0.81ns)   --->   "%n_1_mid = select i1 %exitcond_flatten1, i2 0, i2 %n_1" [source/CNN.cpp:55]   --->   Operation 140 'select' 'n_1_mid' <Predicate = (!exitcond_flatten3)> <Delay = 0.81> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 141 [1/1] (0.81ns)   --->   "%tmp_8_cast_mid2 = select i1 %exitcond_flatten1, i2 %m_3, i2 %m_1" [source/CNN.cpp:55]   --->   Operation 141 'select' 'tmp_8_cast_mid2' <Predicate = (!exitcond_flatten3)> <Delay = 0.81> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 142 [1/1] (0.00ns)   --->   "%tmp_8_cast_mid2_cast = zext i2 %tmp_8_cast_mid2 to i7" [source/CNN.cpp:55]   --->   Operation 142 'zext' 'tmp_8_cast_mid2_cast' <Predicate = (!exitcond_flatten3)> <Delay = 0.00>
ST_10 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node tmp_20_mid4)   --->   "%tmp_8_mid1_cast1 = zext i2 %m_3 to i7" [source/CNN.cpp:49]   --->   Operation 143 'zext' 'tmp_8_mid1_cast1' <Predicate = (!exitcond_flatten3 & exitcond_flatten1 & !exitcond_flatten15_m & !exitcond1_mid1)> <Delay = 0.00>
ST_10 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node tmp_20_mid4)   --->   "%tmp_20_mid = select i1 %exitcond_flatten1, i7 %tmp_8_mid1_cast1, i7 %tmp_19" [source/CNN.cpp:54]   --->   Operation 144 'select' 'tmp_20_mid' <Predicate = (!exitcond_flatten3 & !exitcond_flatten15_m & !exitcond1_mid1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 145 [1/1] (0.63ns)   --->   "%n_3 = add i2 %n_1_mid, 1" [source/CNN.cpp:50]   --->   Operation 145 'add' 'n_3' <Predicate = (!exitcond_flatten3)> <Delay = 0.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 146 [1/1] (0.80ns)   --->   "%i_1_mid = select i1 %tmp_32, i7 0, i7 %i_1" [source/CNN.cpp:52]   --->   Operation 146 'select' 'i_1_mid' <Predicate = (!exitcond_flatten3)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 147 [1/1] (0.81ns)   --->   "%tmp_17_cast_mid2 = select i1 %exitcond_flatten15_m, i2 %n_3, i2 %n_1_mid" [source/CNN.cpp:55]   --->   Operation 147 'select' 'tmp_17_cast_mid2' <Predicate = (!exitcond_flatten3)> <Delay = 0.81> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 148 [1/1] (0.80ns) (out node of the LUT)   --->   "%tmp_20_mid4 = select i1 %exitcond_flatten15_m, i7 %tmp_8_cast_mid2_cast, i7 %tmp_20_mid" [source/CNN.cpp:54]   --->   Operation 148 'select' 'tmp_20_mid4' <Predicate = (!exitcond_flatten3 & !exitcond1_mid1)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node tmp_27)   --->   "%tmp_21_mid = select i1 %tmp_32, i14 0, i14 %tmp_20" [source/CNN.cpp:57]   --->   Operation 149 'select' 'tmp_21_mid' <Predicate = (!exitcond_flatten3 & !exitcond1_mid1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 150 [1/1] (1.31ns)   --->   "%i_3 = add i7 %i_1_mid, 1" [source/CNN.cpp:51]   --->   Operation 150 'add' 'i_3' <Predicate = (!exitcond_flatten3)> <Delay = 1.31> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 151 [1/1] (0.00ns)   --->   "%tmp_22_cast3_mid1 = zext i7 %i_3 to i14" [source/CNN.cpp:57]   --->   Operation 151 'zext' 'tmp_22_cast3_mid1' <Predicate = (!exitcond_flatten3 & exitcond1_mid1)> <Delay = 0.00>
ST_10 : Operation 152 [1/1] (1.31ns)   --->   "%tmp_19_mid1 = add i7 %i_3, %tmp_8_cast_mid2_cast" [source/CNN.cpp:54]   --->   Operation 152 'add' 'tmp_19_mid1' <Predicate = (!exitcond_flatten3 & exitcond1_mid1)> <Delay = 1.31> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 153 [1/1] (0.80ns) (out node of the LUT)   --->   "%tmp_20_mid2 = select i1 %exitcond1_mid1, i7 %tmp_19_mid1, i7 %tmp_20_mid4" [source/CNN.cpp:54]   --->   Operation 153 'select' 'tmp_20_mid2' <Predicate = (!exitcond_flatten3)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 154 [1/1] (3.61ns)   --->   "%tmp_21_mid1 = mul i14 %tmp_22_cast3_mid1, 98" [source/CNN.cpp:57]   --->   Operation 154 'mul' 'tmp_21_mid1' <Predicate = (!exitcond_flatten3 & exitcond1_mid1)> <Delay = 3.61> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.61> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 155 [1/1] (0.00ns) (grouped into LUT with out node tmp_27)   --->   "%tmp_21_mid2 = select i1 %exitcond1_mid1, i14 %tmp_21_mid1, i14 %tmp_21_mid" [source/CNN.cpp:57]   --->   Operation 155 'select' 'tmp_21_mid2' <Predicate = (!exitcond_flatten3)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 156 [1/1] (0.80ns)   --->   "%i_1_mid2 = select i1 %exitcond1_mid1, i7 %i_3, i7 %i_1_mid" [source/CNN.cpp:52]   --->   Operation 156 'select' 'i_1_mid2' <Predicate = (!exitcond_flatten3)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node tmp_27)   --->   "%tmp_26_cast2 = zext i7 %j_1_mid2 to i14" [source/CNN.cpp:54]   --->   Operation 157 'zext' 'tmp_26_cast2' <Predicate = (!exitcond_flatten3)> <Delay = 0.00>
ST_10 : Operation 158 [1/1] (1.52ns) (out node of the LUT)   --->   "%tmp_27 = add i14 %tmp_26_cast2, %tmp_21_mid2" [source/CNN.cpp:57]   --->   Operation 158 'add' 'tmp_27' <Predicate = (!exitcond_flatten3)> <Delay = 1.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 7> <Delay = 8.32>
ST_11 : Operation 159 [1/1] (0.00ns)   --->   "%tmp_8_mid1_cast = zext i2 %m_3 to i5" [source/CNN.cpp:49]   --->   Operation 159 'zext' 'tmp_8_mid1_cast' <Predicate = (!exitcond_flatten3 & exitcond_flatten1 & !exitcond_flatten15_m)> <Delay = 0.00>
ST_11 : Operation 160 [1/1] (0.00ns)   --->   "%tmp_24 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %m_3, i2 0)" [source/CNN.cpp:49]   --->   Operation 160 'bitconcatenate' 'tmp_24' <Predicate = (!exitcond_flatten3 & exitcond_flatten1 & !exitcond_flatten15_m)> <Delay = 0.00>
ST_11 : Operation 161 [1/1] (0.00ns)   --->   "%p_shl3_cast = zext i4 %tmp_24 to i5" [source/CNN.cpp:55]   --->   Operation 161 'zext' 'p_shl3_cast' <Predicate = (!exitcond_flatten3 & exitcond_flatten1 & !exitcond_flatten15_m)> <Delay = 0.00>
ST_11 : Operation 162 [1/1] (0.99ns)   --->   "%tmp_26 = sub i5 %p_shl3_cast, %tmp_8_mid1_cast" [source/CNN.cpp:55]   --->   Operation 162 'sub' 'tmp_26' <Predicate = (!exitcond_flatten3 & exitcond_flatten1 & !exitcond_flatten15_m)> <Delay = 0.99> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 163 [1/1] (0.00ns) (grouped into LUT with out node tmp_19_cast_mid2_v)   --->   "%tmp_35_cast = sext i5 %tmp_26 to i6" [source/CNN.cpp:55]   --->   Operation 163 'sext' 'tmp_35_cast' <Predicate = (!exitcond_flatten3 & exitcond_flatten1 & !exitcond_flatten15_m)> <Delay = 0.00>
ST_11 : Operation 164 [1/1] (0.00ns)   --->   "%tmp_8_mid2_cast = zext i2 %tmp_8_cast_mid2 to i64" [source/CNN.cpp:55]   --->   Operation 164 'zext' 'tmp_8_mid2_cast' <Predicate = (!exitcond_flatten3 & exitcond_flatten15_m)> <Delay = 0.00>
ST_11 : Operation 165 [1/1] (0.00ns)   --->   "%tmp_30 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %tmp_8_cast_mid2, i2 0)" [source/CNN.cpp:55]   --->   Operation 165 'bitconcatenate' 'tmp_30' <Predicate = (!exitcond_flatten3 & exitcond_flatten15_m)> <Delay = 0.00>
ST_11 : Operation 166 [1/1] (0.00ns)   --->   "%p_shl4 = zext i4 %tmp_30 to i64" [source/CNN.cpp:55]   --->   Operation 166 'zext' 'p_shl4' <Predicate = (!exitcond_flatten3 & exitcond_flatten15_m)> <Delay = 0.00>
ST_11 : Operation 167 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp_31 = sub i64 %p_shl4, %tmp_8_mid2_cast" [source/CNN.cpp:55]   --->   Operation 167 'sub' 'tmp_31' <Predicate = (!exitcond_flatten3 & exitcond_flatten15_m)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.39> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 168 [1/1] (0.00ns) (grouped into LUT with out node tmp_19_cast_mid2_v)   --->   "%tmp_19_cast_mid255_v = select i1 %exitcond_flatten1, i6 %tmp_35_cast, i6 %tmp_16" [source/CNN.cpp:56]   --->   Operation 168 'select' 'tmp_19_cast_mid255_v' <Predicate = (!exitcond_flatten3 & !exitcond_flatten15_m)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 169 [1/1] (0.00ns) (grouped into LUT with out node tmp_19_cast_mid2_v)   --->   "%tmp_19_cast_mid255_v_1 = sext i6 %tmp_19_cast_mid255_v to i64" [source/CNN.cpp:56]   --->   Operation 169 'sext' 'tmp_19_cast_mid255_v_1' <Predicate = (!exitcond_flatten3 & !exitcond_flatten15_m)> <Delay = 0.00>
ST_11 : Operation 170 [1/1] (0.50ns)   --->   "%tmp_18_mid = icmp eq i2 %m_3, 0" [source/CNN.cpp:56]   --->   Operation 170 'icmp' 'tmp_18_mid' <Predicate = (!exitcond_flatten3 & exitcond_flatten1 & !exitcond_flatten15_m)> <Delay = 0.50> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node tmp_18_mid2)   --->   "%tmp_18_mid3 = select i1 %exitcond_flatten1, i1 %tmp_18_mid, i1 %tmp_18" [source/CNN.cpp:56]   --->   Operation 171 'select' 'tmp_18_mid3' <Predicate = (!exitcond_flatten3 & !exitcond_flatten15_m)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 172 [1/1] (0.00ns)   --->   "%tmp_17_cast_mid2_cas = zext i2 %tmp_17_cast_mid2 to i7" [source/CNN.cpp:55]   --->   Operation 172 'zext' 'tmp_17_cast_mid2_cas' <Predicate = (!exitcond_flatten3)> <Delay = 0.00>
ST_11 : Operation 173 [1/1] (0.00ns)   --->   "%tmp_16_mid1 = zext i2 %n_3 to i64" [source/CNN.cpp:55]   --->   Operation 173 'zext' 'tmp_16_mid1' <Predicate = (!exitcond_flatten3 & exitcond_flatten15_m)> <Delay = 0.00>
ST_11 : Operation 174 [1/1] (2.79ns) (root node of TernaryAdder)   --->   "%tmp_33 = add i64 %tmp_31, %tmp_16_mid1" [source/CNN.cpp:55]   --->   Operation 174 'add' 'tmp_33' <Predicate = (!exitcond_flatten3 & exitcond_flatten15_m)> <Delay = 2.79> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.39> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 175 [1/1] (0.97ns) (out node of the LUT)   --->   "%tmp_19_cast_mid2_v = select i1 %exitcond_flatten15_m, i64 %tmp_33, i64 %tmp_19_cast_mid255_v_1" [source/CNN.cpp:56]   --->   Operation 175 'select' 'tmp_19_cast_mid2_v' <Predicate = (!exitcond_flatten3)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 176 [1/1] (0.00ns)   --->   "%WBRAM_addr_1 = getelementptr [9 x i8]* %WBRAM, i64 0, i64 %tmp_19_cast_mid2_v" [source/CNN.cpp:55]   --->   Operation 176 'getelementptr' 'WBRAM_addr_1' <Predicate = (!exitcond_flatten3)> <Delay = 0.00>
ST_11 : Operation 177 [2/2] (1.75ns)   --->   "%WBRAM_load = load i8* %WBRAM_addr_1, align 1" [source/CNN.cpp:56]   --->   Operation 177 'load' 'WBRAM_load' <Predicate = (!exitcond_flatten3)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9604> <RAM>
ST_11 : Operation 178 [1/1] (0.00ns) (grouped into LUT with out node tmp_18_mid1)   --->   "%tmp_17_mid1 = or i2 %n_3, %tmp_8_cast_mid2" [source/CNN.cpp:56]   --->   Operation 178 'or' 'tmp_17_mid1' <Predicate = (!exitcond_flatten3 & exitcond_flatten15_m)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 179 [1/1] (0.80ns) (out node of the LUT)   --->   "%tmp_18_mid1 = icmp eq i2 %tmp_17_mid1, 0" [source/CNN.cpp:56]   --->   Operation 179 'icmp' 'tmp_18_mid1' <Predicate = (!exitcond_flatten3 & exitcond_flatten15_m)> <Delay = 0.80> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 180 [1/1] (0.81ns) (out node of the LUT)   --->   "%tmp_18_mid2 = select i1 %exitcond_flatten15_m, i1 %tmp_18_mid1, i1 %tmp_18_mid3" [source/CNN.cpp:56]   --->   Operation 180 'select' 'tmp_18_mid2' <Predicate = (!exitcond_flatten3)> <Delay = 0.81> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 181 [1/1] (0.00ns)   --->   "%tmp_20_mid2_cast = zext i7 %tmp_20_mid2 to i14" [source/CNN.cpp:54]   --->   Operation 181 'zext' 'tmp_20_mid2_cast' <Predicate = (!exitcond_flatten3)> <Delay = 0.00>
ST_11 : Operation 182 [1/1] (2.82ns) (grouped into DSP with root node tmp_37)   --->   "%tmp_36 = mul i14 %tmp_20_mid2_cast, 100" [source/CNN.cpp:54]   --->   Operation 182 'mul' 'tmp_36' <Predicate = (!exitcond_flatten3)> <Delay = 2.82> <Core = "DSP48">   --->   Core 65 'DSP48' <Latency = 0> <II = 1> <Delay = 5.55> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 183 [1/1] (1.31ns)   --->   "%tmp_23 = add i7 %j_1_mid2, %tmp_17_cast_mid2_cas" [source/CNN.cpp:54]   --->   Operation 183 'add' 'tmp_23' <Predicate = (!exitcond_flatten3)> <Delay = 1.31> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 184 [1/1] (0.00ns)   --->   "%tmp_24_cast = zext i7 %tmp_23 to i14" [source/CNN.cpp:54]   --->   Operation 184 'zext' 'tmp_24_cast' <Predicate = (!exitcond_flatten3)> <Delay = 0.00>
ST_11 : Operation 185 [1/1] (2.73ns) (root node of the DSP)   --->   "%tmp_37 = add i14 %tmp_36, %tmp_24_cast" [source/CNN.cpp:54]   --->   Operation 185 'add' 'tmp_37' <Predicate = (!exitcond_flatten3)> <Delay = 2.73> <Core = "DSP48">   --->   Core 65 'DSP48' <Latency = 0> <II = 1> <Delay = 5.55> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 186 [1/1] (0.00ns)   --->   "%tmp_43_cast = zext i14 %tmp_37 to i64" [source/CNN.cpp:54]   --->   Operation 186 'zext' 'tmp_43_cast' <Predicate = (!exitcond_flatten3)> <Delay = 0.00>
ST_11 : Operation 187 [1/1] (0.00ns)   --->   "%IBRAM_addr_1 = getelementptr [10000 x i8]* %IBRAM, i64 0, i64 %tmp_43_cast" [source/CNN.cpp:54]   --->   Operation 187 'getelementptr' 'IBRAM_addr_1' <Predicate = (!exitcond_flatten3)> <Delay = 0.00>
ST_11 : Operation 188 [2/2] (2.77ns)   --->   "%input_pixel = load i8* %IBRAM_addr_1, align 1" [source/CNN.cpp:54]   --->   Operation 188 'load' 'input_pixel' <Predicate = (!exitcond_flatten3)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9604> <RAM>

State 12 <SV = 8> <Delay = 6.38>
ST_12 : Operation 189 [1/2] (1.75ns)   --->   "%WBRAM_load = load i8* %WBRAM_addr_1, align 1" [source/CNN.cpp:56]   --->   Operation 189 'load' 'WBRAM_load' <Predicate = (!exitcond_flatten3)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9604> <RAM>
ST_12 : Operation 190 [1/1] (0.00ns)   --->   "%tmp_19_cast_mid2 = sext i8 %WBRAM_load to i16" [source/CNN.cpp:56]   --->   Operation 190 'sext' 'tmp_19_cast_mid2' <Predicate = (!exitcond_flatten3)> <Delay = 0.00>
ST_12 : Operation 191 [1/2] (2.77ns)   --->   "%input_pixel = load i8* %IBRAM_addr_1, align 1" [source/CNN.cpp:54]   --->   Operation 191 'load' 'input_pixel' <Predicate = (!exitcond_flatten3)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9604> <RAM>
ST_12 : Operation 192 [1/1] (0.00ns)   --->   "%tmp_29_cast = sext i8 %input_pixel to i16" [source/CNN.cpp:55]   --->   Operation 192 'sext' 'tmp_29_cast' <Predicate = (!exitcond_flatten3)> <Delay = 0.00>
ST_12 : Operation 193 [1/1] (3.61ns)   --->   "%tmp_25 = mul i16 %tmp_29_cast, %tmp_19_cast_mid2" [source/CNN.cpp:55]   --->   Operation 193 'mul' 'tmp_25' <Predicate = (!exitcond_flatten3)> <Delay = 3.61> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.61> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 194 [1/1] (0.00ns)   --->   "%temp = call i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16 %tmp_25, i32 8, i32 15)" [source/CNN.cpp:55]   --->   Operation 194 'partselect' 'temp' <Predicate = (!exitcond_flatten3)> <Delay = 0.00>
ST_12 : Operation 195 [1/1] (0.00ns)   --->   "%tmp_28 = zext i14 %tmp_27 to i64" [source/CNN.cpp:57]   --->   Operation 195 'zext' 'tmp_28' <Predicate = (!exitcond_flatten3)> <Delay = 0.00>
ST_12 : Operation 196 [1/1] (0.00ns)   --->   "%OBRAM_addr_1 = getelementptr inbounds [9604 x i8]* %OBRAM, i64 0, i64 %tmp_28" [source/CNN.cpp:57]   --->   Operation 196 'getelementptr' 'OBRAM_addr_1' <Predicate = (!exitcond_flatten3)> <Delay = 0.00>
ST_12 : Operation 197 [2/2] (2.77ns)   --->   "%OBRAM_load_1 = load i8* %OBRAM_addr_1, align 1" [source/CNN.cpp:59]   --->   Operation 197 'load' 'OBRAM_load_1' <Predicate = (!exitcond_flatten3 & !tmp_18_mid2)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9604> <RAM>

State 13 <SV = 9> <Delay = 7.29>
ST_13 : Operation 198 [1/1] (0.00ns)   --->   "%tmp_22 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str3)" [source/CNN.cpp:52]   --->   Operation 198 'specregionbegin' 'tmp_22' <Predicate = (!exitcond_flatten3)> <Delay = 0.00>
ST_13 : Operation 199 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind" [source/CNN.cpp:53]   --->   Operation 199 'specpipeline' <Predicate = (!exitcond_flatten3)> <Delay = 0.00>
ST_13 : Operation 200 [1/2] (2.77ns)   --->   "%OBRAM_load_1 = load i8* %OBRAM_addr_1, align 1" [source/CNN.cpp:59]   --->   Operation 200 'load' 'OBRAM_load_1' <Predicate = (!exitcond_flatten3 & !tmp_18_mid2)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9604> <RAM>
ST_13 : Operation 201 [1/1] (1.30ns)   --->   "%tmp_29 = add i8 %temp, %OBRAM_load_1" [source/CNN.cpp:59]   --->   Operation 201 'add' 'tmp_29' <Predicate = (!exitcond_flatten3 & !tmp_18_mid2)> <Delay = 1.30> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 202 [1/1] (0.44ns) (out node of the LUT)   --->   "%storemerge = select i1 %tmp_18_mid2, i8 %temp, i8 %tmp_29" [source/CNN.cpp:59]   --->   Operation 202 'select' 'storemerge' <Predicate = (!exitcond_flatten3)> <Delay = 0.44> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 203 [1/1] (2.77ns)   --->   "store i8 %storemerge, i8* %OBRAM_addr_1, align 1" [source/CNN.cpp:57]   --->   Operation 203 'store' <Predicate = (!exitcond_flatten3)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9604> <RAM>
ST_13 : Operation 204 [1/1] (0.00ns)   --->   "%empty_27 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str3, i32 %tmp_22)" [source/CNN.cpp:60]   --->   Operation 204 'specregionend' 'empty_27' <Predicate = (!exitcond_flatten3)> <Delay = 0.00>
ST_13 : Operation 205 [1/1] (0.00ns)   --->   "br label %.preheader9" [source/CNN.cpp:52]   --->   Operation 205 'br' <Predicate = (!exitcond_flatten3)> <Delay = 0.00>

State 14 <SV = 7> <Delay = 0.46>
ST_14 : Operation 206 [1/1] (0.00ns)   --->   "%tmp_21 = trunc i8 %bias_read to i7"   --->   Operation 206 'trunc' 'tmp_21' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 207 [1/1] (0.46ns)   --->   "br label %.preheader" [source/CNN.cpp:66]   --->   Operation 207 'br' <Predicate = true> <Delay = 0.46>

State 15 <SV = 8> <Delay = 2.77>
ST_15 : Operation 208 [1/1] (0.00ns)   --->   "%k = phi i14 [ %k_1, %1 ], [ 0, %.preheader.preheader ]"   --->   Operation 208 'phi' 'k' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 209 [1/1] (1.98ns)   --->   "%exitcond = icmp eq i14 %k, -6780" [source/CNN.cpp:66]   --->   Operation 209 'icmp' 'exitcond' <Predicate = true> <Delay = 1.98> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 210 [1/1] (0.00ns)   --->   "%empty_28 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 9604, i64 9604, i64 9604)"   --->   Operation 210 'speclooptripcount' 'empty_28' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 211 [1/1] (1.52ns)   --->   "%k_1 = add i14 %k, 1" [source/CNN.cpp:66]   --->   Operation 211 'add' 'k_1' <Predicate = true> <Delay = 1.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 212 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %2, label %1" [source/CNN.cpp:66]   --->   Operation 212 'br' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 213 [1/1] (0.00ns)   --->   "%tmp_13 = zext i14 %k to i64" [source/CNN.cpp:68]   --->   Operation 213 'zext' 'tmp_13' <Predicate = (!exitcond)> <Delay = 0.00>
ST_15 : Operation 214 [1/1] (0.00ns)   --->   "%OBRAM_addr = getelementptr inbounds [9604 x i8]* %OBRAM, i64 0, i64 %tmp_13" [source/CNN.cpp:68]   --->   Operation 214 'getelementptr' 'OBRAM_addr' <Predicate = (!exitcond)> <Delay = 0.00>
ST_15 : Operation 215 [2/2] (2.77ns)   --->   "%OBRAM_load = load i8* %OBRAM_addr, align 1" [source/CNN.cpp:68]   --->   Operation 215 'load' 'OBRAM_load' <Predicate = (!exitcond)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9604> <RAM>

State 16 <SV = 9> <Delay = 6.19>
ST_16 : Operation 216 [1/2] (2.77ns)   --->   "%OBRAM_load = load i8* %OBRAM_addr, align 1" [source/CNN.cpp:68]   --->   Operation 216 'load' 'OBRAM_load' <Predicate = (!exitcond)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9604> <RAM>
ST_16 : Operation 217 [1/1] (0.00ns)   --->   "%tmp_38 = trunc i8 %OBRAM_load to i7" [source/CNN.cpp:68]   --->   Operation 217 'trunc' 'tmp_38' <Predicate = (!exitcond)> <Delay = 0.00>
ST_16 : Operation 218 [1/1] (1.30ns)   --->   "%x_assign = add i8 %bias_read, %OBRAM_load" [source/CNN.cpp:68]   --->   Operation 218 'add' 'x_assign' <Predicate = (!exitcond)> <Delay = 1.30> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 219 [1/1] (1.31ns)   --->   "%x_assign_cast = add i7 %tmp_38, %tmp_21" [source/CNN.cpp:4->source/CNN.cpp:68]   --->   Operation 219 'add' 'x_assign_cast' <Predicate = (!exitcond)> <Delay = 1.31> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 220 [1/1] (1.31ns)   --->   "%tmp_15 = icmp sgt i8 %x_assign, 0" [source/CNN.cpp:6->source/CNN.cpp:68]   --->   Operation 220 'icmp' 'tmp_15' <Predicate = (!exitcond)> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 221 [1/1] (0.80ns)   --->   "%x_assign_1 = select i1 %tmp_15, i7 %x_assign_cast, i7 0" [source/CNN.cpp:6->source/CNN.cpp:68]   --->   Operation 221 'select' 'x_assign_1' <Predicate = (!exitcond)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 17 <SV = 10> <Delay = 2.77>
ST_17 : Operation 222 [1/1] (0.00ns)   --->   "%tmp_12 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str4)" [source/CNN.cpp:66]   --->   Operation 222 'specregionbegin' 'tmp_12' <Predicate = (!exitcond)> <Delay = 0.00>
ST_17 : Operation 223 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind" [source/CNN.cpp:67]   --->   Operation 223 'specpipeline' <Predicate = (!exitcond)> <Delay = 0.00>
ST_17 : Operation 224 [1/1] (0.00ns)   --->   "%x_assign_1_cast = zext i7 %x_assign_1 to i8" [source/CNN.cpp:6->source/CNN.cpp:68]   --->   Operation 224 'zext' 'x_assign_1_cast' <Predicate = (!exitcond)> <Delay = 0.00>
ST_17 : Operation 225 [1/1] (0.00ns)   --->   "%output_img_addr = getelementptr [9604 x i8]* %output_img, i64 0, i64 %tmp_13" [source/CNN.cpp:68]   --->   Operation 225 'getelementptr' 'output_img_addr' <Predicate = (!exitcond)> <Delay = 0.00>
ST_17 : Operation 226 [1/1] (2.77ns)   --->   "store i8 %x_assign_1_cast, i8* %output_img_addr, align 1" [source/CNN.cpp:68]   --->   Operation 226 'store' <Predicate = (!exitcond)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9604> <RAM>
ST_17 : Operation 227 [1/1] (0.00ns)   --->   "%empty_29 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str4, i32 %tmp_12)" [source/CNN.cpp:69]   --->   Operation 227 'specregionend' 'empty_29' <Predicate = (!exitcond)> <Delay = 0.00>
ST_17 : Operation 228 [1/1] (0.00ns)   --->   "br label %.preheader" [source/CNN.cpp:66]   --->   Operation 228 'br' <Predicate = (!exitcond)> <Delay = 0.00>

State 18 <SV = 9> <Delay = 0.00>
ST_18 : Operation 229 [1/1] (0.00ns)   --->   "ret void" [source/CNN.cpp:71]   --->   Operation 229 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.466ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten') with incoming values : ('indvar_flatten_next') [14]  (0.466 ns)

 <State 2>: 3.19ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', source/CNN.cpp:29) [16]  (0 ns)
	'icmp' operation ('exitcond1', source/CNN.cpp:29) [22]  (1.06 ns)
	'select' operation ('j_mid2', source/CNN.cpp:29) [23]  (0.808 ns)
	'add' operation ('j', source/CNN.cpp:29) [41]  (1.32 ns)

 <State 3>: 8.32ns
The critical path consists of the following:
	'mul' operation of DSP[32] ('tmp_3_mid2', source/CNN.cpp:31) [26]  (2.82 ns)
	'add' operation of DSP[32] ('tmp_s', source/CNN.cpp:31) [32]  (2.73 ns)
	'getelementptr' operation ('input_img_addr', source/CNN.cpp:31) [34]  (0 ns)
	'load' operation ('input_img_load', source/CNN.cpp:31) on array 'input_img' [35]  (2.77 ns)

 <State 4>: 5.54ns
The critical path consists of the following:
	'load' operation ('input_img_load', source/CNN.cpp:31) on array 'input_img' [35]  (2.77 ns)
	'store' operation (source/CNN.cpp:31) of variable 'input_img_load', source/CNN.cpp:31 on array 'IBRAM', source/CNN.cpp:17 [39]  (2.77 ns)

 <State 5>: 0.466ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten6') with incoming values : ('indvar_flatten_next7') [47]  (0.466 ns)

 <State 6>: 5.69ns
The critical path consists of the following:
	'phi' operation ('m', source/CNN.cpp:40) with incoming values : ('tmp_7_mid2_v', source/CNN.cpp:40) [48]  (0 ns)
	'add' operation ('m', source/CNN.cpp:37) [58]  (0.632 ns)
	'sub' operation ('tmp_6_mid1', source/CNN.cpp:40) [64]  (0.997 ns)
	'select' operation ('tmp_6_mid2', source/CNN.cpp:40) [65]  (0 ns)
	'add' operation ('tmp_8', source/CNN.cpp:40) [74]  (1.02 ns)
	'add' operation ('sum', source/CNN.cpp:40) [76]  (1.28 ns)
	'getelementptr' operation ('kernel_addr', source/CNN.cpp:40) [78]  (0 ns)
	'load' operation ('kernel_load', source/CNN.cpp:40) on array 'kernel' [79]  (1.75 ns)

 <State 7>: 4.55ns
The critical path consists of the following:
	'sub' operation ('tmp_2', source/CNN.cpp:40) [70]  (0 ns)
	'add' operation ('tmp_10', source/CNN.cpp:40) [80]  (2.79 ns)
	'getelementptr' operation ('WBRAM_addr', source/CNN.cpp:40) [82]  (0 ns)
	'store' operation (source/CNN.cpp:40) of variable 'kernel_load', source/CNN.cpp:40 on array 'WBRAM', source/CNN.cpp:20 [83]  (1.75 ns)

 <State 8>: 0.466ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten1') with incoming values : ('indvar_flatten_next3') [90]  (0.466 ns)

 <State 9>: 5.86ns
The critical path consists of the following:
	'phi' operation ('indvar_flatten2') with incoming values : ('indvar_flatten_next2') [92]  (0 ns)
	'icmp' operation ('exitcond_flatten1') [115]  (2.14 ns)
	'xor' operation ('not_exitcond_flatten', source/CNN.cpp:52) [134]  (0.8 ns)
	'and' operation ('exitcond_flatten15_m', source/CNN.cpp:52) [138]  (0.8 ns)
	'or' operation ('tmp_34', source/CNN.cpp:52) [159]  (0 ns)
	'or' operation ('tmp_35', source/CNN.cpp:52) [160]  (0 ns)
	'select' operation ('j_1_mid2', source/CNN.cpp:52) [161]  (0.808 ns)
	'add' operation ('j', source/CNN.cpp:52) [190]  (1.32 ns)

 <State 10>: 7.26ns
The critical path consists of the following:
	'phi' operation ('i_1', source/CNN.cpp:52) with incoming values : ('i_1_mid2', source/CNN.cpp:52) [95]  (0 ns)
	'select' operation ('i_1_mid', source/CNN.cpp:52) [141]  (0.808 ns)
	'add' operation ('i_3', source/CNN.cpp:51) [158]  (1.32 ns)
	'mul' operation ('tmp_21_mid1', source/CNN.cpp:57) [167]  (3.61 ns)
	'select' operation ('tmp_21_mid2', source/CNN.cpp:57) [168]  (0 ns)
	'add' operation ('tmp_27', source/CNN.cpp:57) [182]  (1.53 ns)

 <State 11>: 8.32ns
The critical path consists of the following:
	'mul' operation of DSP[175] ('tmp_36', source/CNN.cpp:54) [166]  (2.82 ns)
	'add' operation of DSP[175] ('tmp_37', source/CNN.cpp:54) [175]  (2.73 ns)
	'getelementptr' operation ('IBRAM_addr_1', source/CNN.cpp:54) [177]  (0 ns)
	'load' operation ('input_pixel', source/CNN.cpp:54) on array 'IBRAM', source/CNN.cpp:17 [178]  (2.77 ns)

 <State 12>: 6.38ns
The critical path consists of the following:
	'load' operation ('input_pixel', source/CNN.cpp:54) on array 'IBRAM', source/CNN.cpp:17 [178]  (2.77 ns)
	'mul' operation ('tmp_25', source/CNN.cpp:55) [180]  (3.61 ns)

 <State 13>: 7.3ns
The critical path consists of the following:
	'load' operation ('OBRAM_load_1', source/CNN.cpp:59) on array 'OBRAM', source/CNN.cpp:18 [185]  (2.77 ns)
	'add' operation ('tmp_29', source/CNN.cpp:59) [186]  (1.31 ns)
	'select' operation ('storemerge', source/CNN.cpp:59) [187]  (0.448 ns)
	'store' operation (source/CNN.cpp:57) of variable 'storemerge', source/CNN.cpp:59 on array 'OBRAM', source/CNN.cpp:18 [188]  (2.77 ns)

 <State 14>: 0.466ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('k') with incoming values : ('k', source/CNN.cpp:66) [200]  (0.466 ns)

 <State 15>: 2.77ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', source/CNN.cpp:66) [200]  (0 ns)
	'getelementptr' operation ('OBRAM_addr', source/CNN.cpp:68) [209]  (0 ns)
	'load' operation ('OBRAM_load', source/CNN.cpp:68) on array 'OBRAM', source/CNN.cpp:18 [210]  (2.77 ns)

 <State 16>: 6.2ns
The critical path consists of the following:
	'load' operation ('OBRAM_load', source/CNN.cpp:68) on array 'OBRAM', source/CNN.cpp:18 [210]  (2.77 ns)
	'add' operation ('x', source/CNN.cpp:68) [212]  (1.31 ns)
	'icmp' operation ('tmp_15', source/CNN.cpp:6->source/CNN.cpp:68) [214]  (1.31 ns)
	'select' operation ('x', source/CNN.cpp:6->source/CNN.cpp:68) [215]  (0.808 ns)

 <State 17>: 2.77ns
The critical path consists of the following:
	'store' operation (source/CNN.cpp:68) of variable 'x_assign_1_cast', source/CNN.cpp:6->source/CNN.cpp:68 on array 'output_img' [218]  (2.77 ns)

 <State 18>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
